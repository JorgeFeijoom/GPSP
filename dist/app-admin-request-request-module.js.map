{"version":3,"sources":["webpack:///./src/app/admin/admin-user-guard.ts","webpack:///./src/app/admin/request/request-list/request-list.component.html","webpack:///./src/app/admin/request/request-list/request-list.component.scss","webpack:///./src/app/admin/request/request-list/request-list.component.ts","webpack:///./src/app/admin/request/request-routing.module.ts","webpack:///./src/app/admin/request/request.module.ts","webpack:///./src/app/admin/request/request.service.ts"],"names":[],"mappings":"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","file":"app-admin-request-request-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from \"@angular/router\";\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from '../auth/auth.service';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class OnlyAdminUsersGuard implements CanActivate {\n  \n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): Observable<boolean> | boolean {\n\n    /*\n     * Only authenticated users with admin role are allowed to pass.\n     * \n     * If user is not allowed, is redirected to home\n     *\n     */\n\n    return this.authService.isLoggedIn().map(logged => {\n\n      const user = (<any>window).user;\n\n      if ( logged && user && user.isAdmin ) return true;\n      else this.router.navigate(['']);\n    });\n\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxFlex=\\\"100\\\">\\n        <mat-toolbar color=\\\"accent\\\">\\n            <mat-toolbar-row>\\n              <div class=\\\"main-icon\\\"><mat-icon>notification_important</mat-icon></div>\\n              <div><span class=\\\"title\\\">Peticiones</span></div>\\n              <span class=\\\"spacer\\\"></span>\\n              <button routerLink=\\\"/admin/\\\" mat-icon-button matTooltip=\\\"Volver al Inicio\\\">\\n                <mat-icon>chevron_left</mat-icon>\\n              </button>\\n            </mat-toolbar-row>\\n        </mat-toolbar>\\n\\n        <!-- PROGRESS BAR  -->\\n        <div class=\\\"progress-bar-container\\\" class=\\\"main-container progress-bar-container\\\">\\n          <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n        </div>\\n\\n        <!-- NO ITEMS FOR SHOWING -->\\n        <div *ngIf=\\\"!isLoading && requests === null\\\" class=\\\"no-results-container\\\">\\n          <h3> No existen peticiones </h3>\\n        </div>\\n\\n        <!-- RESULTS -->\\n        <div class=\\\"requests\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n          <mat-card class=\\\"element\\\" *ngFor=\\\"let request of requests\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n            <div fxFlex=\\\"35\\\" fxFlex.sm=\\\"49\\\">\\n              <h3> {{ request.nameSubject }} </h3>\\n              <p>  {{ request.codeSubject }} </p>\\n              \\n              <p class=\\\"who\\\"> de {{ request.nameUser }} </p>\\n            </div>\\n            <div fxFlex=\\\"40\\\" fxFlex.sm=\\\"49\\\">\\n              <h4> Software </h4>\\n              <!-- <p>\\n                {{request.software}}\\n              </p> -->\\n              <p> Visual Studio Code - Versi贸n: 1.12</p>\\n              <p> Oracle Server - Versi贸n: 11g </p>\\n              <p> Pycharm - Versi贸n: 2.14 </p>\\n              <p> R Studio - Versi贸n: 1.1 </p>\\n            </div>\\n            <div class=\\\"check-wrap\\\" fxFlex=\\\"15\\\" fxFlex.sm=\\\"10\\\" fxLayout=\\\"column\\\">\\n              <mat-checkbox\\n                class=\\\"checkbox\\\"\\n                [(ngModel)]=\\\"request.available\\\">\\n                Aceptada\\n              </mat-checkbox>\\n              <mat-checkbox\\n                class=\\\"checkbox\\\"\\n                [(ngModel)]=\\\"request.installed\\\">\\n                Instaladas\\n              </mat-checkbox>\\n            </div>\\n          </mat-card>\\n        </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".container {\\n  max-width: 1200px;\\n  width: 90%;\\n  margin: 0px auto;\\n  min-height: calc(100vh - 85px); }\\n\\n.title {\\n  font-weight: 900;\\n  padding-left: 5px; }\\n\\n.main-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto;\\n  padding: 20px 0px; }\\n\\nh3 {\\n  font-size: 18px; }\\n\\n.no-results-container {\\n  margin-top: 40px; }\\n\\n.requests .element {\\n  margin-bottom: 40px;\\n  position: relative; }\\n\\n.requests .element .who {\\n    color: #a9a9a9;\\n    position: absolute;\\n    bottom: 10px; }\\n\\n.sidenav-main-content {\\n  display: flex;\\n  height: 100%;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: #f4f3f3;\\n  width: 100%; }\\n\\n.check-wrap {\\n  padding-top: 20px; }\\n\\n.check-wrap .checkbox {\\n    margin: 0 10px 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RequestService } from '../request.service';\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.component.html',\n  styleUrls: ['./request-list.component.scss']\n})\nexport class RequestListComponent implements OnInit {\n  requests = null;\n  isLoading = true;\n\n  constructor(private requestService: RequestService) { }\n\n  ngOnInit() {\n    this\n    .requestService\n    .getAllRequests()\n    .subscribe(\n      (request) => {\n        console.log(request);\n        this.requests = request;\n        console.log('Request: ' + request);\n        this.isLoading = false;\n      },\n      (error: any) => {\n        this.isLoading = false;\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OnlyAdminUsersGuard } from '../admin-user-guard';\nimport { RequestListComponent } from './request-list/request-list.component';\n\nconst routes: Routes = [{\n  path: '',\n  canActivate: [OnlyAdminUsersGuard],\n  children: [\n    { path: '', component: RequestListComponent, pathMatch: 'full' }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RequestRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RequestListComponent } from './request-list/request-list.component';\nimport { RequestRoutingModule } from './request-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RequestRoutingModule,\n    SharedModule\n  ],\n  declarations: [RequestListComponent]\n})\nexport class RequestModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  constructor(private http: HttpClient ) { }\n\n  /* Get All requests of user */\n  getAllRequests(): Observable<any> {\n    const url = '/api/request/getall';\n    return this.http.get(url, {});\n  }\n}\n"],"sourceRoot":""}