{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app-routing/teacher-user-guard.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.scss","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/token.storage.ts","webpack:///./src/app/footers/footer/footer.component.html","webpack:///./src/app/footers/footer/footer.component.scss","webpack:///./src/app/footers/footer/footer.component.ts","webpack:///./src/app/headers/header/header.component.html","webpack:///./src/app/headers/header/header.component.scss","webpack:///./src/app/headers/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/interceptors/header.interceptor.ts","webpack:///./src/app/interceptors/http-error.interceptor.ts","webpack:///./src/app/layouts/admin-layout/menu.ts","webpack:///./src/app/layouts/auth-layout/auth-layout.component.html","webpack:///./src/app/layouts/auth-layout/auth-layout.component.scss","webpack:///./src/app/layouts/auth-layout/auth-layout.component.ts","webpack:///./src/app/layouts/main-layout/main-layout.component.html","webpack:///./src/app/layouts/main-layout/main-layout.component.scss","webpack:///./src/app/layouts/main-layout/main-layout.component.ts","webpack:///./src/app/layouts/main-layout/menu.ts","webpack:///./src/app/matricularme/matricularme.component.html","webpack:///./src/app/matricularme/matricularme.component.scss","webpack:///./src/app/matricularme/matricularme.component.ts","webpack:///./src/app/my-subjects/my-subjects.component.html","webpack:///./src/app/my-subjects/my-subjects.component.scss","webpack:///./src/app/my-subjects/my-subjects.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.scss","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/request/create-request/create-request.component.html","webpack:///./src/app/request/create-request/create-request.component.scss","webpack:///./src/app/request/create-request/create-request.component.ts","webpack:///./src/app/request/request.component.html","webpack:///./src/app/request/request.component.scss","webpack:///./src/app/request/request.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/subject-detail/matriculate.service.ts","webpack:///./src/app/subject-detail/subject-detail.component.html","webpack:///./src/app/subject-detail/subject-detail.component.scss","webpack:///./src/app/subject-detail/subject-detail.component.ts","webpack:///./src/app/subjects/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/subjects/confirm-dialog/confirm-dialog.component.scss","webpack:///./src/app/subjects/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/subjects/enroll-dialog/enroll-dialog.component.html","webpack:///./src/app/subjects/enroll-dialog/enroll-dialog.component.scss","webpack:///./src/app/subjects/enroll-dialog/enroll-dialog.component.ts","webpack:///./src/app/subjects/subject.service.ts","webpack:///./src/app/subjects/subjects.component.html","webpack:///./src/app/subjects/subjects.component.scss","webpack:///./src/app/subjects/subjects.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"app/admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"app-admin-admin-module\"\n\t],\n\t\"app/admin/import/import.module\": [\n\t\t\"./src/app/admin/import/import.module.ts\",\n\t\t\"app-admin-import-import-module\"\n\t],\n\t\"app/admin/request/request.module\": [\n\t\t\"./src/app/admin/request/request.module.ts\",\n\t\t\"app-admin-request-request-module\"\n\t],\n\t\"app/admin/subjects/subjects.module\": [\n\t\t\"./src/app/admin/subjects/subjects.module.ts\",\n\t\t\"app-admin-subjects-subjects-module~app-admin-users-users-module\",\n\t\t\"app-admin-subjects-subjects-module\"\n\t],\n\t\"app/admin/users/users.module\": [\n\t\t\"./src/app/admin/users/users.module.ts\",\n\t\t\"app-admin-subjects-subjects-module~app-admin-users-users-module\",\n\t\t\"app-admin-users-users-module\"\n\t],\n\t\"app/auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../auth/auth-guard.service';\nimport { HomeComponent } from '../home/home.component';\nimport { MainLayoutComponent } from '../layouts/main-layout/main-layout.component';\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\nimport { ProfileComponent } from '../profile/profile.component';\nimport { SubjectsComponent } from '../subjects/subjects.component';\nimport { SubjectDetailComponent } from '../subject-detail/subject-detail.component';\nimport { MySubjectsComponent } from '../my-subjects/my-subjects.component';\nimport { RequestComponent } from '../request/request.component';\nimport { OnlyTeacherUsersGuard } from './teacher-user-guard';\n\nconst routes: Routes = [{\n  path: '',\n  component: MainLayoutComponent,\n  children: [\n    { path: '', component: SubjectsComponent, pathMatch: 'full' }\n  ]\n}, {\n  path: 'admin',\n  loadChildren: 'app/admin/admin.module#AdminModule'\n}, {\n  path: 'auth',\n  loadChildren: 'app/auth/auth.module#AuthModule'\n}, {\n  path: 'profile',\n  component: MainLayoutComponent,\n  children: [\n    { path: '', component: ProfileComponent }\n  ]\n}, {\n  path: 'subjects',\n  component: MainLayoutComponent,\n  children: [\n    { path: '', component: MySubjectsComponent }\n  ]\n}, {\n  canActivate: [OnlyTeacherUsersGuard],\n  path: 'request',\n  component: MainLayoutComponent,\n  children: [\n    { path: '', component: RequestComponent }\n  ]\n}, {\n  path: 'detail/:code',\n  component: MainLayoutComponent,\n  children: [\n    { path: '', component: SubjectDetailComponent }\n  ]\n}, {\n  path: 'matricularme',\n  component: MainLayoutComponent,\n  children: [\n    { path: '', component: SubjectsComponent }\n  ]\n}, {\n  path: '**',\n  component: PageNotFoundComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard],\n  declarations: []\n})\n\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from '../auth/auth.service';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class OnlyTeacherUsersGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): Observable<boolean> | boolean {\n\n    /*\n     * Only authenticated users with teacher role are allowed to pass.\n     *\n     * If user is not allowed, is redirected to home\n     *\n     */\n\n    return this.authService.isLoggedIn().map(logged => {\n      const user = (<any>window).user;\n      if ( logged && user && user.isTeacher ) {\n        return true;\n    } else { this.router.navigateByUrl('/404'); } });\n  }\n}\n","module.exports = \"<ngx-loading-bar [color]=\\\"'#ed9b09'\\\"></ngx-loading-bar>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MatIconRegistry } from \"@angular/material\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n\nimport { AuthService } from './auth/auth.service';\nimport * as schema from './schema/equipment.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  private userSubscription: Subscription;\n  public user: any;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private domSanitizer: DomSanitizer,\n    private matIconRegistry: MatIconRegistry\n  ) {\n    this.registerSvgIcons()\n  }\n\n  public ngOnInit() {}\n\n  logout(): void {\n    this.authService.signOut();\n    this.navigate('');\n  }\n\n  navigate(link): void {\n    this.router.navigate([link]);\n  }\n\n  ngOnDestroy() { \n    if (this.userSubscription) {\n      this.userSubscription.unsubscribe();\n    }\n  }\n\n  registerSvgIcons() {\n    [\n      'close',\n      'add',\n      'add-blue',\n      'airplane-front-view',\n      'air-station',\n      'balloon',\n      'boat',\n      'cargo-ship',\n      'car',\n      'catamaran',\n      'clone',\n      'convertible',\n      'delete',\n      'drone',\n      'fighter-plane',\n      'fire-truck',\n      'horseback-riding',\n      'motorcycle',\n      'railcar',\n      'railroad-train',\n      'rocket-boot',\n      'sailing-boat',\n      'segway',\n      'shuttle',\n      'space-shuttle',\n      'steam-engine',\n      'suv',\n      'tour-bus',\n      'tow-truck',\n      'transportation',\n      'trolleybus',\n      'water-transportation',\n    ].forEach((icon) => {\n      this.matIconRegistry.addSvgIcon(icon, this.domSanitizer.bypassSecurityTrustResourceUrl(`assets/icons/${icon}.svg`))\n    });\n  }\n\n}\n","import { registerLocaleData } from '@angular/common';\nimport localeEs from '@angular/common/locales/es';\nimport localeEsExtra from '@angular/common/locales/extra/es';\nimport { LOCALE_ID } from '@angular/core';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { SharedModule } from './shared/shared.module';\nimport { AuthModule } from './auth/auth.module';\n\nimport { AppComponent } from './app.component';\nimport { AuthHeaderInterceptor } from './interceptors/header.interceptor';\nimport { CatchErrorInterceptor } from './interceptors/http-error.interceptor';\n\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { HeaderComponent } from './headers/header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthLayoutComponent } from './layouts/auth-layout/auth-layout.component';\nimport { MainLayoutComponent } from './layouts/main-layout/main-layout.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { FooterComponent } from './footers/footer/footer.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SubjectsComponent } from './subjects/subjects.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SubjectDetailComponent } from './subject-detail/subject-detail.component';\nimport { MatricularmeComponent } from './matricularme/matricularme.component';\nimport { EnrollDialogComponent } from './subjects/enroll-dialog/enroll-dialog.component';\nimport { MySubjectsComponent } from './my-subjects/my-subjects.component';\nimport { ConfirmDialogComponent } from './subjects/confirm-dialog/confirm-dialog.component';\nimport { RequestComponent } from './request/request.component';\nimport { OnlyTeacherUsersGuard } from './app-routing/teacher-user-guard';\nimport { CreateRequestComponent } from './request/create-request/create-request.component';\n\nregisterLocaleData(localeEs, 'es-ES', localeEsExtra);\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule,\n    SharedModule,\n    AuthModule,\n    AppRoutingModule,\n    LoadingBarHttpClientModule,\n    ToastrModule.forRoot(),\n    LoadingBarRouterModule,\n    NgxPaginationModule\n  ],\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    AuthLayoutComponent,\n    MainLayoutComponent,\n    PageNotFoundComponent,\n    ProfileComponent,\n    SubjectsComponent,\n    SubjectDetailComponent,\n    MatricularmeComponent,\n    EnrollDialogComponent,\n    MySubjectsComponent,\n    ConfirmDialogComponent,\n    RequestComponent,\n    CreateRequestComponent\n  ],\n  providers: [OnlyTeacherUsersGuard,\n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthHeaderInterceptor,\n    multi: true,\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: CatchErrorInterceptor,\n    multi: true,\n  }, {\n    provide: LOCALE_ID, useValue: 'es-ES'\n  }],\n  entryComponents: [EnrollDialogComponent, ConfirmDialogComponent, CreateRequestComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(public router: Router) {}\n\n    canActivate() {\n      const user = (<any>window).user;\n      if (user) return true;\n\n      // not logged in so redirect to login page with the return url\n      this.router.navigate(['/auth/login']);\n      return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\n\nconst routes: Routes = [{\n  path: 'auth',\n  children: [{\n    path: '',\n    redirectTo: '/auth/login',\n    pathMatch: 'full'\n  }, {\n    path: 'login',\n    component: LoginComponent\n  }, {\n    path: 'register',\n    component: RegisterComponent\n  }]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class AuthRoutingModule { }\n","module.exports = \"@charset \\\"UTF-8\\\";\\n.login {\\n  max-width: 500px;\\n  width: 100%;\\n  text-align: center;\\n  margin: 40px auto; }\\n.login .logo {\\n    width: 100%;\\n    max-width: 200px; }\\n.login img {\\n    margin: 5% auto; }\\n.login .login-card {\\n    text-align: left;\\n    background-color: #565555;\\n    color: #fff;\\n    border-radius: 6px; }\\n.login .login-card mat-card-title {\\n      font-size: 18px; }\\n.login .login-card mat-card-content {\\n      padding-top: 20px; }\\n.login .login-card mat-card-subtitle {\\n      color: rgba(255, 255, 255, 0.768627); }\\n.login .login-card mat-card-actions {\\n      text-align: right; }\\n::ng-deep .login .mat-form-field-wrapper,\\n::ng-deep .login .mat-form-field {\\n  font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n  font-weight: 400;\\n  line-height: 1.125;\\n  font-size: 17px; }\\n::ng-deep .login .mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: white; }\\n::ng-deep .login input.mat-input-element {\\n  color: white; }\\n::ng-deep .login .mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label, ::ng-deep .login .mat-form-field-empty.mat-form-field-label {\\n  color: rgba(255, 255, 255, 0.6) !important; }\\n.mat-form-field-label  {\\n  color: rgba(255, 255, 255, 0.6) !important; }\\n::-webkit-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(255, 255, 255, 0.5) !important;\\n  opacity: 1;\\n  /* Firefox */ }\\n:-ms-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(255, 255, 255, 0.5) !important;\\n  opacity: 1;\\n  /* Firefox */ }\\n::-ms-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(255, 255, 255, 0.5) !important;\\n  opacity: 1;\\n  /* Firefox */ }\\n::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(255, 255, 255, 0.5) !important;\\n  opacity: 1;\\n  /* Firefox */ }\\n:-ms-input-placeholder {\\n  /* Internet Explorer 10-11 */\\n  color: rgba(255, 255, 255, 0.5) !important; }\\n::-ms-input-placeholder {\\n  /* Microsoft Edge */\\n  color: rgba(255, 255, 255, 0.5) !important; }\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthService } from './auth.service';\nimport { TokenStorage } from './token.storage';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    AuthRoutingModule,\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ],\n  providers: [\n    AuthService,\n    TokenStorage\n  ]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { TokenStorage } from './token.storage';\n\n@Injectable()\nexport class AuthService {\n\n  constructor(private http: HttpClient, private token: TokenStorage) {}\n\n  public $userSource = new Subject<any>();\n  private loggedIn: boolean = false;\n\n  login(email: string, password: string): Observable <any> {\n    return Observable.create(observer => {\n      this.http.post('/api/auth/login', {\n        email,\n        password\n      }).subscribe((data: any) => {\n        observer.next({ user: data.user });\n        this.setUser(data.user);\n        this.token.saveToken(data.token);\n        observer.complete();\n      });\n    });\n  }\n\n  register(fullname: string, email: string, password: string, repeatPassword: string): Observable <any> {\n    return Observable.create(observer => {\n      this.http.post('/api/auth/register', {\n        fullname,\n        email,\n        password,\n        repeatPassword\n      }).subscribe((data: any) => {\n        observer.next({user: data.user});\n        this.setUser(data.user);\n        this.token.saveToken(data.token);\n        observer.complete();\n      });\n    });\n  }\n\n  setUser(user: any): void {\n    if (user) { user.isAdmin = (user.roles.indexOf('admin') > -1); }\n    if (user) { user.isTeacher = (user.roles.indexOf('profesor') > -1); }\n    this.loggedIn = true;\n    this.$userSource.next(user);\n    (<any>window).user = user;\n  }\n\n  getUser(): Observable<any> {\n    return this.$userSource.asObservable();\n  }\n\n  me(): Observable<any> {\n    return Observable.create(observer => {\n      const tokenVal = this.token.getToken();\n\n      //\n      // Checking if user already has token stored\n      //\n\n      if ( !tokenVal ) {\n        observer.next(null);\n        return observer.complete();\n      }\n\n      //\n      // Checking if user already has the info stored in window\n      //\n\n      if ( (<any>window).user ) {\n        observer.next({ user: (<any>window).user });\n        return observer.complete();\n      }\n\n      //\n      // User has token stored (logged) but browser\n      // hasn't got info about the user. Retrieving from\n      // backend and store it.\n      //\n\n      this.http.get('/api/auth/me').subscribe((data: any) => {\n        this.setUser(data.user);\n        observer.next({ user: data.user });\n        observer.complete();\n      });\n    });\n  }\n\n  signOut(): void {\n    this.token.signOut();\n    this.setUser(null);\n    delete (<any>window).user;\n  }\n\n  isLoggedIn(): Observable<boolean> {\n\n    return Observable.create(observer => {\n\n      //\n      // If user is already logged, just confirm it\n      // and return.\n      //\n\n      if ( this.loggedIn ) {\n        observer.next(true);\n        return observer.complete();\n      }\n\n      //\n      // User appareantly is not logged so let's try\n      // to log him in.\n      //\n\n      this.me().subscribe(user => {\n\n        if ( user && user !== null ) {\n          observer.next(true);\n          observer.complete();\n        } else {\n          observer.next(false);\n          observer.complete();\n        }\n\n      });\n\n    });\n\n  }\n}\n","module.exports = \"<form [formGroup]=\\\"loginForm\\\">\\n  <div class=\\\"login\\\">\\n    <img class=\\\"logo\\\" src=\\\"../../assets/img/logo-rgb.png\\\" alt=\\\"ulpgc\\\">\\n    <mat-card class=\\\"login-card mat-elevation-z8\\\">\\n      <mat-card-header>\\n        <mat-card-title><strong>Autenticación</strong></mat-card-title>\\n        <mat-card-subtitle>Introduce tus credenciales de acceso al <strong>backoffice</strong></mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput #email name=\\\"email\\\" formControlName=\\\"email\\\" maxlength=\\\"120\\\" placeholder=\\\"Introduce tu correo electrónico\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\n          <mat-label>Contraseña</mat-label>\\n          <input matInput type=\\\"password\\\" #password name=\\\"password\\\" formControlName=\\\"password\\\" maxlength=\\\"120\\\" placeholder=\\\"Introduce tu contraseña\\\">\\n        </mat-form-field>\\n\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <button mat-button (click)=\\\"login()\\\" color=\\\"primary\\\">ENTRAR</button>\\n        <button mat-button (click)=\\\"login()\\\" color=\\\"primary\\\">RECUPERAR CONTRASEÑA</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</form>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n              private fb: FormBuilder,\n              private router: Router) { }\n\n  //\n  // Main login object\n  //\n\n  loginForm = this.fb.group({\n    email: [''],\n    password: ['']\n  });\n\n  ngOnInit() {\n  }\n\n  login(): void {\n    this.authService.login(this.loginForm.get('email').value, this.loginForm.get('password').value)\n    .subscribe(data => {\n      this.router.navigate(['/admin']);\n    })\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Register</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"example-form\\\">\\n      <table cellspacing=\\\"0\\\" [formGroup]=\\\"userForm\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Fullname\\\" formControlName=\\\"fullname\\\" name=\\\"fullname\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" name=\\\"email\\\" required>\\n              <mat-error *ngIf=\\\"email.invalid && email.errors.email\\\">Invalid email address</mat-error>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Reapet Password\\\" formControlName=\\\"repeatPassword\\\" type=\\\"password\\\" name=\\\"repeatPassword\\\" required>\\n              <mat-error *ngIf=\\\"repeatPassword.invalid && repeatPassword.errors.passwordMatch\\\">Password mismatch</mat-error>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"register()\\\" color=\\\"primary\\\">Register</button>\\n    <span>Allrady have an account ? <a [routerLink]=\\\"['/auth/login']\\\">login</a> here</span>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\n\n\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../auth.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  passwordsMatchValidator(control: FormControl): ValidationErrors {\n    let password = control.root.get('password');\n    return password && control.value !== password.value ? {\n      passwordMatch: true\n    }: null;\n  }\n\n  userForm = new FormGroup({\n    fullname: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    repeatPassword: new FormControl('', [Validators.required, this.passwordsMatchValidator])\n  })\n\n  get fullname(): any { return this.userForm.get('fullname'); }\n  get email(): any { return this.userForm.get('email'); }\n  get password(): any { return this.userForm.get('password'); }\n  get repeatPassword(): any { return this.userForm.get('repeatPassword'); }\n\n  register() {\n\n    if(!this.userForm.valid) return;\n\n    let {\n      fullname,\n      email,\n      password,\n      repeatPassword\n    } = this.userForm.getRawValue();\n\n    this.authService.register(fullname, email, password, repeatPassword)\n    .subscribe(data => {\n      this.router.navigate(['']);\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n\nconst TOKEN_KEY = 'AuthToken';\n\n@Injectable()\nexport class TokenStorage {\n\n  constructor() { }\n\n  signOut() {\n    window.localStorage.removeItem(TOKEN_KEY);\n    window.localStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    if (!token) return;\n    window.localStorage.removeItem(TOKEN_KEY);\n    window.localStorage.setItem(TOKEN_KEY,  token);\n  }\n\n  public getToken(): string {\n    return localStorage.getItem(TOKEN_KEY);\n  }\n}","module.exports = \"<footer>\\n  <div class=\\\"footer-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n    <div>Footer</div>\\n  </div>\\n</footer>\"","module.exports = \"footer {\\n  width: 100%; }\\n  footer .footer-container {\\n    padding: 10px;\\n    background-color: #1a1a1a;\\n    color: #fff; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header>\\n  <mat-toolbar>\\n    <a [routerLink]=\\\"['/']\\\" id=\\\"logo\\\">\\n      <!-- <img class=\\\"logo\\\" src=\\\"../../assets/img/logo-text.gif\\\" alt=\\\"GPSP\\\" /> -->\\n    </a>\\n    <!-- NOT LOGGED USER -->\\n    <div *ngIf=\\\"!user\\\" class=\\\"menu\\\">\\n      <a [routerLink]=\\\"['/auth/login']\\\"  class=\\\"menu-element\\\">\\n        Iniciar sesión <span> <img class=\\\"mat-icon\\\" src=\\\"../../../assets/img/icons/Recurso_3.svg\\\"></span>\\n      </a>\\n    </div>\\n    <!-- /NOT LOGGED USER -->\\n\\n    <!-- DROPDOWN LOGGED USER -->\\n    <div *ngIf=\\\"user && !user.isAdmin && !user.isTeacher\\\" class=\\\"menu\\\">\\n      <a [matMenuTriggerFor]=\\\"menu\\\" class=\\\"menu-element hamb\\\">\\n        <span> <img class=\\\"mat-icon\\\" src=\\\"../../../assets/img/icons/Recurso_2.svg\\\"> </span>\\n      </a>\\n      <a [matMenuTriggerFor]=\\\"userMenu\\\" class=\\\"menu-element\\\">\\n        {{ user.fullname }} <span><img class=\\\"mat-icon\\\" src=\\\"../../../assets/img/icons/Recurso_3.svg\\\"></span>\\n      </a>\\n      <mat-menu #userMenu=\\\"matMenu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item [routerLink]=\\\"['/profile']\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">person</mat-icon>Perfil</button>\\n        <button mat-menu-item (click)=\\\"logout()\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">power_settings_news</mat-icon>Salir</button>\\n      </mat-menu>\\n\\n      <mat-menu #menu=\\\"matMenu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item [routerLink]=\\\"['/']\\\" [routerLinkActive]=\\\"'header-button-active'\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">home</mat-icon>Inicio</button>\\n        <button mat-menu-item *ngFor=\\\"let section of dropdown.top\\\" [routerLink]=\\\"['/profile']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">face</mat-icon>Mi Perfil</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item [routerLink]=\\\"['/subjects']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">class</mat-icon>Mis asignaturas</button>\\n        <button mat-menu-item [routerLink]=\\\"['/matricularme']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">queue</mat-icon>Matricularme</button>\\n        <button mat-menu-item [routerLink]=\\\"['/mv']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">dns</mat-icon>Máquinas virtuales</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item (click)=\\\"logout()\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">power_settings_news</mat-icon>Salir</button>\\n      </mat-menu>\\n\\n      <a class=\\\"menu-element\\\" routerLink=\\\"/matricularme\\\">\\n        Buscar <span> <mat-icon class=\\\"header-menu-icon-margin\\\">search</mat-icon> </span>\\n      </a>\\n    </div>\\n    <!-- /DROPDOWN LOGGED USER -->\\n\\n    <!-- DROPDOWN TEACHER USER -->\\n    <div *ngIf=\\\"user && !user.isAdmin && user.isTeacher\\\" class=\\\"menu\\\">\\n      <a [matMenuTriggerFor]=\\\"menu\\\" class=\\\"menu-element hamb\\\">\\n        <span> <img class=\\\"mat-icon\\\" src=\\\"../../../assets/img/icons/Recurso_2.svg\\\"> </span>\\n      </a>\\n      <a [matMenuTriggerFor]=\\\"userMenu\\\" class=\\\"menu-element\\\">\\n        {{ user.fullname }} <span><img class=\\\"mat-icon\\\" src=\\\"../../../assets/img/icons/Recurso_3.svg\\\"></span>\\n      </a>\\n      <mat-menu #userMenu=\\\"matMenu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item [routerLink]=\\\"['/profile']\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">person</mat-icon>Perfil</button>\\n        <button mat-menu-item [routerLink]=\\\"['/request']\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">notification_important</mat-icon>Mis peticiones</button>\\n        <button mat-menu-item (click)=\\\"logout()\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">power_settings_news</mat-icon>Salir</button>\\n      </mat-menu>\\n\\n      <mat-menu #menu=\\\"matMenu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item [routerLink]=\\\"['/']\\\" [routerLinkActive]=\\\"'header-button-active'\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">home</mat-icon>Inicio</button>\\n        <button mat-menu-item [routerLink]=\\\"['/request']\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">add_alert</mat-icon>Mis peticiones</button>\\n        <button mat-menu-item *ngFor=\\\"let section of dropdown.top\\\" [routerLink]=\\\"['/profile']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">face</mat-icon>Mi Perfil</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item [routerLink]=\\\"['/subjects']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">class</mat-icon>Mis asignaturas</button>\\n        <button mat-menu-item [routerLink]=\\\"['/matricularme']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">queue</mat-icon>Matricularme</button>\\n        <button mat-menu-item [routerLink]=\\\"['/mv']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">dns</mat-icon>Máquinas virtuales</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item (click)=\\\"logout()\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">power_settings_news</mat-icon>Salir</button>\\n      </mat-menu>\\n\\n      <a class=\\\"menu-element\\\" routerLink=\\\"/matricularme\\\">\\n        Buscar <span> <mat-icon class=\\\"header-menu-icon-margin\\\">search</mat-icon> </span>\\n      </a>\\n    </div>\\n    <!-- /DROPDOWN TEACHER USER -->\\n\\n    <!-- DROPDOWN ADMIN USER -->\\n    <div *ngIf=\\\"user && user.isAdmin\\\" class=\\\"menu user\\\">\\n      <a [matMenuTriggerFor]=\\\"menu\\\" class=\\\"menu-element hamb\\\">\\n        <span> <img class=\\\"mat-icon\\\" src=\\\"../../../assets/img/icons/Recurso_2.svg\\\"> </span>\\n      </a>\\n      <a [matMenuTriggerFor]=\\\"userMenu\\\" class=\\\"menu-element\\\">\\n        {{ user.fullname }} <span> <img class=\\\"mat-icon\\\" src=\\\"../../../assets/img/icons/Recurso_3.svg\\\"></span>\\n      </a>\\n      <mat-menu #menu=\\\"matMenu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item [routerLink]=\\\"['/']\\\" [routerLinkActive]=\\\"'header-button-active'\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">home</mat-icon>Inicio</button>\\n        <button mat-menu-item *ngFor=\\\"let section of dropdown.top\\\" [routerLink]=\\\"['/profile']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">face</mat-icon>Mi Perfil</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item [routerLink]=\\\"['/subjects']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">class</mat-icon>Mis asignaturas</button>\\n        <button mat-menu-item [routerLink]=\\\"['/matricularme']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">queue</mat-icon>Matricularme</button>\\n        <button mat-menu-item [routerLink]=\\\"['/mv']\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">dns</mat-icon>Máquinas virtuales</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item (click)=\\\"logout()\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">power_settings_news</mat-icon>Salir</button>\\n      </mat-menu>\\n\\n      <mat-menu #userMenu=\\\"matMenu\\\" yPosition=\\\"below\\\" [overlapTrigger]=\\\"false\\\">\\n        <button mat-menu-item [routerLink]=\\\"['/profile']\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">person</mat-icon>Perfil</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item [routerLink]=\\\"['/admin']\\\" [routerLinkActive]=\\\"'header-button-active'\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">home</mat-icon>Admin</button>\\n        <button mat-menu-item *ngFor=\\\"let section of dropdown.top\\\" [routerLink]=\\\"[section.url]\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">{{ section.icon }}</mat-icon>{{ section.name }}</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item *ngFor=\\\"let section of dropdown.middle\\\" [routerLink]=\\\"[section.url]\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">{{ section.icon }}</mat-icon>{{ section.name }}</button>\\n        <mat-divider></mat-divider>\\n        <button mat-menu-item *ngFor=\\\"let section of dropdown.bottom\\\" [routerLink]=\\\"[section.url]\\\" [routerLinkActive]=\\\"'header-button-active'\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">{{ section.icon }}</mat-icon>{{ section.name }}</button>\\n        <button mat-menu-item (click)=\\\"logout()\\\"><mat-icon class=\\\"header-menu-icon-margin\\\">power_settings_news</mat-icon>Salir</button>\\n      </mat-menu>\\n      <a class=\\\"menu-element\\\" routerLink=\\\"/matricularme\\\">\\n        Buscar  <span> <mat-icon class=\\\"header-menu-icon-margin\\\">search</mat-icon> </span>\\n      </a>\\n    </div>\\n    <!-- /DROPDOWN ADMIN USER -->\\n  </mat-toolbar>\\n</header>\\n\"","module.exports = \"header {\\n  top: 0;\\n  width: 100%;\\n  height: 83px;\\n  position: fixed;\\n  background: linear-gradient(to bottom, #002e67 0%, #42648e 100%);\\n  z-index: 999;\\n  color: white; }\\n  header #logo {\\n    background: url('ulpgc_graficos_v14.svg') -641px -2128px no-repeat;\\n    background-size: 1900px;\\n    width: 440px;\\n    height: 70px; }\\n  header .mat-toolbar {\\n    padding-top: 10px;\\n    height: 83px;\\n    background-color: transparent;\\n    color: #fff;\\n    position: fixed;\\n    z-index: 10;\\n    max-width: 1920px; }\\n  header .mat-icon {\\n    vertical-align: middle;\\n    width: 40px;\\n    height: 40px;\\n    font-size: 40px;\\n    line-height: 40px; }\\n  header .social-icon {\\n    margin-right: 15px; }\\n  header .menu {\\n    margin-top: -5px;\\n    color: #fff;\\n    width: 100%; }\\n  header .menu .mat-icon {\\n      margin-left: 15px;\\n      margin-right: 5px;\\n      color: #fff; }\\n  header .menu .menu-element {\\n      float: right;\\n      margin-right: 30px;\\n      text-decoration: none;\\n      color: #fff;\\n      font-size: 18px;\\n      font-weight: 600; }\\n  header .menu .menu-element .material-icons {\\n        margin-left: 0px;\\n        vertical-align: bottom; }\\n  header .menu .menu-element span {\\n        vertical-align: super; }\\n  header .menu .menu-element span .mat-icon {\\n          vertical-align: middle;\\n          width: 30px;\\n          height: 30px;\\n          font-size: 30px;\\n          line-height: 30px;\\n          margin-left: 10px; }\\n  header .menu .menu-element.hamb {\\n      padding-top: 2px; }\\n  header .menu .menu-element.hamb img.mat-icon {\\n        width: 40px; }\\n  header button {\\n    margin-top: -5px; }\\n  header a {\\n    cursor: pointer; }\\n  header .container.large {\\n    max-width: 1920px;\\n    width: 100%;\\n    position: relative; }\\n  header .logo-link {\\n    padding: 0px 0px 0px 60px; }\\n  header .logo {\\n    width: 170px; }\\n  .cdk-overlay-connected-position-bounding-box {\\n  top: 80px;\\n  padding-left: 22px; }\\n  @media (max-width: 1360px) {\\n  header {\\n    width: 100%; }\\n    header .mat-toolbar {\\n      max-width: 1200px;\\n      width: 100%;\\n      margin: auto;\\n      left: 0;\\n      right: 0; }\\n    header .logo-link {\\n      padding-left: 0px; } }\\n  @media (max-width: 1260px) {\\n  header .mat-toolbar {\\n    padding: 10px 5% 0 5%; } }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, Routes } from '@angular/router';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { Menu } from '../../layouts/admin-layout/menu';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() user: any = {};\n\n  public dropdown: Menu;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n\n    //\n    // Loading dropdown menu\n    //\n\n    this.dropdown = new Menu();\n  }\n\n  logout(): void {\n    this.authService.signOut();\n    this.navigate('');\n  }\n\n  navigate(link): void {\n    this.router.navigate([link]);\n  }\n\n}\n","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {TokenStorage} from '../auth/token.storage';\n\nexport class AuthHeaderInterceptor implements HttpInterceptor {\n\tintercept(req : HttpRequest <any>, next : HttpHandler) : Observable <HttpEvent<any>> {\n\t\t\t// Clone the request to add the new header\n      const token = new TokenStorage();\n      const tokenVal = token.getToken();\n\t\t\tconst clonedRequest = req.clone({\n\t\t\theaders: req\n\t\t\t\t.headers\n\t\t\t\t.set('Authorization', tokenVal ? `Bearer ${ tokenVal}` : '')\n\t\t});\n\n\t\t// Pass the cloned request instead of the original request to the next handle\n\t\treturn next.handle(clonedRequest);\n\t}\n}","import {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/do';\n\nexport class CatchErrorInterceptor implements HttpInterceptor {\n  intercept(request : HttpRequest < any >, next : HttpHandler) : Observable < HttpEvent < any >> {\n\n    return next\n      .handle(request)\n      .do \n        ((event : HttpEvent < any >) => {}, (err : any) => {\n          if (err instanceof HttpErrorResponse) {\n            let text = (err.error && err.error.message) ? err.error.message : err.statusText;\n            console.error(text);\n            (<any>window).globalEvents.emit('open error dialog', text);\n          }\n        });\n\n      }\n  }","export class Menu {\n\n  public top: Section[];\n  public middle: Section[];\n  public bottom: Section[];\n\n  constructor () {\n\n    this.top = [{\n      url: '/admin/request',\n      icon: 'notification_important',\n      name: 'Peticiones',\n      pos: 'top'\n    }, {\n      url: '/admin/import',\n      icon: 'import_export',\n      name: 'Importar',\n      pos: 'top'\n    }];\n\n    this.middle = [{\n      url: '/admin/users',\n      icon: 'personal',\n      name: 'Usuarios',\n      pos: 'middle'\n    }, {\n      url: '/admin/subjects',\n      icon: 'book',\n      name: 'Asignaturas',\n      pos: 'middle'\n    }];\n\n    this.bottom = [];\n\n  }\n\n}\n\nexport interface Section {\n  url: string;\n  icon: string;\n  name: string;\n  pos: string;\n}\n","module.exports = \"<div class=\\\"wrapper-app\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"body {\\n  background: linear-gradient(to bottom, #002e67 0%, #42648e 100%); }\\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit() {\n    console.log('AUTH');\n  }\n\n  ngAfterViewInit() {\n\n    //\n    // Changing body background color\n    //\n\n    this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = '#000';\n  }\n\n}\n","module.exports = \"<app-header [user]=\\\"user\\\"></app-header>\\n<div class=\\\"wrapper-app\\\">\\n  <mat-sidenav-container autosize>\\n    <mat-sidenav *ngIf=\\\"user\\\" #sidenav class=\\\"sidenav\\\" mode=\\\"side\\\" opened=\\\"true\\\" [fixedInViewport]=\\\"'true'\\\" [fixedTopGap]=\\\"'83'\\\">\\n  \\n      <mat-nav-list>\\n        <mat-list-item>\\n          <button mat-icon-button matTooltip=\\\"{{ !isExpanded ? 'Expandir menú' : 'Ocultar menú' }}\\\" [matTooltipPosition]=\\\"'right'\\\"  (click)=\\\"isExpanded = !isExpanded\\\">\\n            <mat-icon *ngIf=\\\"!isExpanded\\\">chevron_right</mat-icon>\\n            <mat-icon *ngIf=\\\"isExpanded\\\">chevron_left</mat-icon>\\n          </button>\\n        </mat-list-item>\\n\\n        <mat-divider class=\\\"margin-top\\\"></mat-divider>\\n\\n        <mat-list-item routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\n          <mat-icon mat-list-icon matTooltip=\\\"{{ !isExpanded ? 'Dashboard' : '' }}\\\" [matTooltipPosition]=\\\"'right'\\\">home</mat-icon>\\n          <p matLine *ngIf=\\\"isExpanded\\\">Dashboard</p>\\n        </mat-list-item>\\n        <mat-list-item *ngFor=\\\"let section of menu.top\\\" routerLink=\\\"{{ section.url }}\\\" matTooltip=\\\"{{ !isExpanded ? section.name : '' }}\\\"  [matTooltipPosition]=\\\"'right'\\\"  routerLinkActive=\\\"active\\\">\\n          <mat-icon mat-list-icon>{{ section.icon }}</mat-icon>\\n          <p matLine *ngIf=\\\"isExpanded\\\">{{ section.name }}</p>\\n        </mat-list-item>\\n\\n        <mat-divider class=\\\"margin-bottom\\\"></mat-divider>\\n\\n        <mat-list-item *ngFor=\\\"let section of menu.middle\\\" routerLink=\\\"{{ section.url }}\\\" routerLinkActive=\\\"active\\\" matTooltip=\\\"{{ !isExpanded ? section.name : '' }}\\\"  [matTooltipPosition]=\\\"'right'\\\">\\n          <mat-icon mat-list-icon>{{ section.icon }}</mat-icon>\\n          <p matLine *ngIf=\\\"isExpanded\\\">{{ section.name }}</p>\\n        </mat-list-item>\\n\\n        <mat-divider class=\\\"margin-top\\\"></mat-divider>\\n\\n        <mat-list-item *ngFor=\\\"let section of menu.bottom\\\" routerLink=\\\"{{ section.url }}\\\" routerLinkActive=\\\"active\\\">\\n          <mat-icon mat-list-icon>{{ section.icon }}</mat-icon>\\n          <p matLine *ngIf=\\\"isExpanded\\\">{{ section.name }}</p>\\n        </mat-list-item>\\n\\n        <mat-list-item (click)=\\\"logout()\\\">\\n          <mat-icon mat-list-icon matTooltip=\\\"{{ !isExpanded ? 'Salir' : '' }}\\\" [matTooltipPosition]=\\\"'right'\\\">power_settings_new</mat-icon>\\n          <p matLine *ngIf=\\\"isExpanded\\\">Salir</p>\\n        </mat-list-item>\\n\\n      </mat-nav-list>\\n\\n    </mat-sidenav>\\n  \\n    <div class=\\\"sidenav-main-content\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  \\n  </mat-sidenav-container>\\n\\n</div>\"","module.exports = \"/*-----------------------------------------------\\n                   Variables\\n-----------------------------------------------*/\\n.sidenav {\\n  background-color: #42648e;\\n  color: #fff;\\n  overflow-y: auto;\\n  overflow-x: hidden; }\\n.sidenav mat-list-item {\\n    color: #fff; }\\n.sidenav mat-divider {\\n    border-color: rgba(255, 255, 255, 0.17); }\\n.sidenav mat-divider.margin-top {\\n    margin-top: 20px; }\\n.sidenav mat-divider.margin-bottom {\\n    margin-bottom: 20px; }\\n.sidenav mat-list-item.active {\\n    color: #ff9a00; }\\n.sidenav mat-list-item.active p {\\n      font-weight: 800; }\\n.sidenav-main-content {\\n  display: flex;\\n  height: 100%;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%; }\\n:host ::ng-deep router-outlet + *:not(nav) {\\n  width: 100%; }\\n:host ::ng-deep router-outlet + *:not(nav) mat-toolbar {\\n    max-width: 1024px;\\n    margin: 20px auto; }\\n:host ::ng-deep router-outlet + *:not(nav) mat-toolbar .main-icon {\\n      margin-top: 5px;\\n      margin-right: 5px; }\\n:host ::ng-deep router-outlet + *:not(nav) mat-toolbar a {\\n      text-decoration: none;\\n      color: #118fe8; }\\n:host ::ng-deep router-outlet + *:not(nav) .mat-progress-bar-fill::after {\\n    background-color: #118fe8; }\\n:host ::ng-deep router-outlet + *:not(nav) .mat-progress-bar-buffer {\\n    background-color: #8ed5f1; }\\n:host ::ng-deep router-outlet + *:not(nav) .mat-progress-bar {\\n    height: 3px; }\\n\"","import { Component, OnInit, ElementRef, SecurityContext } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { AuthService } from '../../auth/auth.service';\nimport { Menu, Section } from './menu';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit {\n  private userSubscription: Subscription;\n  public user: any;\n  public isExpanded: boolean = false;\n  public menu: Menu;\n\n  constructor(private authService: AuthService,\n              private router: Router,\n              private elementRef: ElementRef) { }\n\n  ngOnInit() {\n\n    //\n    // Loading menu\n    //\n\n    this.menu = new Menu();\n\n    // init this.user on startup\n    this.authService.me().subscribe(data => {\n      if ( !data ) this.user = null;\n      else this.user = data.user;\n    });\n\n    // update this.user after login/register/logout\n    this.userSubscription = this.authService.$userSource.subscribe((user) => {\n      this.user = user;\n    });\n\n  }\n\n  ngAfterViewInit() {\n\n    //\n    // Changing body background color\n    //\n\n    this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = '#fff';\n  }\n\n  logout(): void {\n    this.authService.signOut();\n    this.navigate('');\n  }\n\n  navigate(link): void {\n    this.router.navigate([link]);\n  }\n\n}\n","export class Menu {\n\n  public top: Section[];\n  public middle: Section[];\n  public bottom: Section[];\n\n  constructor () {\n\n    this.top = [{\n      url: '/profile',\n      icon: 'face',\n      name: 'Mi Perfil',\n      pos: 'top'\n    }];\n\n    this.middle = [{\n      url: '/subjects',\n      icon: 'class',\n      name: 'Mis Asignaturas',\n      pos: 'middle'\n    }, {\n      url: '/matricularme',\n      icon: 'queue',\n      name: 'Matricularme',\n      pos: 'middle'\n    }, {\n      url: '/mv',\n      icon: 'dns',\n      name: 'Máquinas virtuales',\n      pos: 'middle'\n    }];\n\n    this.bottom = [];\n\n  }\n\n}\n\nexport interface Section {\n  url: string,\n  icon: string,\n  name: string,\n  pos: string\n}","module.exports = \"<div class=\\\"container\\\">\\n    <h2> Asignaturas </h2>\\n      <div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <div fxFlex=\\\"100\\\">\\n          <mat-tab-group mat-align-tabs=\\\"left\\\" color=\\\"accent\\\">\\n            <mat-tab>\\n              <ng-template mat-tab-label>Todas</ng-template>\\n      \\n              <!-- TABLE -- All articles -->\\n              <div class=\\\"table mat-elevation-z8\\\">\\n      \\n                <!-- PROGRESS BAR  -->\\n                <div class=\\\"progress-bar-container\\\" class=\\\"progress-bar-container\\\">\\n                  <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n                </div>\\n                <!-- SEARCH BAR -->\\n                <!-- <div *ngIf=\\\"searchBar\\\" class=\\\"search-container\\\">\\n                  <mat-form-field>\\n                    <input matInput placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"searchValue\\\" (ngModelChange)=\\\"didFilterUsers($event);\\\">\\n                    <button mat-button *ngIf=\\\"searchValue\\\" matSuffix mat-icon-button aria-label=\\\"Borrar\\\" (click)=\\\"searchValue='';didFilterUsers($event)\\\">\\n                      <mat-icon>close</mat-icon>\\n                    </button>\\n                  </mat-form-field>\\n                </div> -->\\n      \\n                <!-- NO ITEMS FOR SHOWING -->\\n                <div *ngIf=\\\"paginationConfig.totalItems === 0 && !isLoading\\\" class=\\\"no-results-container\\\">\\n                  <h3>No hay asignaturas para mostrar</h3>\\n                </div>\\n      \\n                <table class=\\\"subjects-table\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"didSortSubjects($event)\\\" *ngIf=\\\"paginationConfig.totalItems > 0\\\">\\n          \\n                  <!-- Codigo Column -->\\n                  <ng-container matColumnDef=\\\"codigo\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Código </th>\\n                    <td mat-cell *matCellDef=\\\"let subject\\\" routerLink=\\\"/detail/{{subject.codigo}}\\\"> <strong>{{ subject.codigo }}</strong> </td>\\n                  </ng-container>\\n          \\n                  <!-- Nombre Column -->\\n                  <ng-container matColumnDef=\\\"nombre\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\\n                    <td mat-cell *matCellDef=\\\"let subject\\\" routerLink=\\\"/detail/{{subject.codigo}}\\\"> {{ subject.nombre }} </td>\\n                  </ng-container>\\n      \\n                  <!--  Duracion Column -->\\n                  <ng-container matColumnDef=\\\"duracion\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Duración </th>\\n                    <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.duracion}} </td>\\n                  </ng-container>\\n          \\n                  <!-- Curso At Column -->\\n                  <ng-container matColumnDef=\\\"curso\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Curso </th>\\n                    <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.curso }} </td>\\n                  </ng-container>\\n\\n                  <!--  Updated Column -->\\n                  <ng-container matColumnDef=\\\"updated\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Actualizado </th>\\n                    <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.updated | date:'longDate' }} </td>\\n                  </ng-container>\\n      \\n                  <!-- Actions At Column -->\\n                  <!-- <ng-container matColumnDef=\\\"actions\\\">\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\n                    <td mat-cell *matCellDef=\\\"let subject\\\" class=\\\"text-right\\\">\\n                      <button mat-icon-button matTooltip=\\\"Editar usuario\\\" color=\\\"info\\\" (click)=\\\"openEditUserDialog(user)\\\">\\n                        <mat-icon aria-label=\\\"Editar usuario\\\">create</mat-icon>\\n                      </button>\\n                      <button *ngIf=\\\"user._id !== myUser._id\\\" [swal]=\\\"userDeletionAlert\\\" mat-icon-button matTooltip=\\\"Borrar usuario\\\" color=\\\"info\\\" (confirm)=\\\"deleteUser(user)\\\">\\n                        <mat-icon aria-label=\\\"Editar usuario\\\">delete</mat-icon>\\n                      </button>\\n                    </td>\\n                  </ng-container> -->\\n      \\n                  <!-- Footer -->\\n                  <ng-container matColumnDef=\\\"pagination\\\" class=\\\"pagination\\\">\\n                    <td mat-footer-cell *matFooterCellDef colspan=\\\"5\\\">\\n                      <div class=\\\"pagination-container\\\">\\n                        <ul>\\n                          <li *ngFor=\\\"let subject of subjects | paginate: paginationConfig\\\">Prueba</li>\\n                        </ul>\\n                        <pagination-controls [id]=\\\"paginationConfig.id\\\"\\n                        (pageChange)=\\\"didPageChange($event)\\\"\\n                        maxSize=\\\"7\\\"\\n                        directionLinks=\\\"true\\\"\\n                        autoHide=\\\"false\\\"\\n                        responsive=\\\"true\\\"\\n                        previousLabel=\\\"Anterior\\\"\\n                        nextLabel=\\\"Siguiente\\\"\\n                        screenReaderPaginationLabel=\\\"Paginación\\\"\\n                        screenReaderPageLabel=\\\"página\\\"\\n                        screenReaderCurrentLabel=\\\"Estás en la página\\\">\\n                        </pagination-controls>\\n                      </div>\\n                    </td>\\n                  </ng-container>\\n          \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                  <tr mat-footer-row *matFooterRowDef=\\\"['pagination']\\\"></tr>\\n                </table>\\n          \\n              </div>\\n              <!-- /TABLE - All articles -->\\n      \\n            </mat-tab>\\n      \\n          </mat-tab-group>\\n        </div>\\n      \\n      </div>\\n</div>\"","module.exports = \".subjects-table {\\n  width: 100%; }\\n\\n.ngx-pagination {\\n  padding: 0px;\\n  text-align: center; }\\n\"","import { Component, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from '../subjects/subject';\nimport { SubjectService } from '../subjects/subject.service';\n\n@Component({\n  selector: 'app-matricularme',\n  templateUrl: './matricularme.component.html',\n  styleUrls: ['./matricularme.component.scss']\n})\nexport class MatricularmeComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  subjects: Subject[] = [];\n\n  paginationConfig: any = {\n    id: 'subjects_pagination',\n    itemsPerPage: 5,\n    currentPage: 1,\n    totalItems: 0\n  };\n\n  sortValue: any;\n  isLoading = true;\n  displayedColumns: string[] = ['codigo', 'nombre', 'duracion', 'curso', 'updated'];\n  dataSource = new MatTableDataSource<Subject>(this.subjects);\n\n  constructor(\n    private subjectService: SubjectService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.getAll();\n  }\n\n  getAll() {\n    this.isLoading = true;\n\n    this\n      .subjectService\n      .getAll({\n        page: this.paginationConfig.currentPage,\n        pageSize: this.paginationConfig.itemsPerPage,\n        sort: this.sortValue && this.sortValue.direction ? this.sortValue.direction : '',\n        sortField: this.sortValue && this.sortValue.active ? this.sortValue.active : '',\n      }, 'no-loading-bar')\n      .subscribe((subjects: any) => {\n\n        this.paginationConfig.currentPage = subjects.page;\n        this.paginationConfig.totalItems = subjects.totalDocs;\n        this.paginationConfig.itemsPerPage = subjects.limit;\n        this.dataSource.data = subjects.docs;\n\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n\n      }, (error) => {\n        console.error(error);\n        this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n      });\n  }\n\n  didPageChange (page: number) {\n    this.paginationConfig.currentPage = page;\n    this.getAll();\n  }\n\n  didSortSubjects (event: any) {\n    this.sortValue = event;\n    this.getAll();\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <!-- <h2> Asignaturas </h2>-->\\n  <div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n    <div fxFlex=\\\"100\\\">\\n      <mat-toolbar color=\\\"accent\\\">\\n          <mat-toolbar-row>\\n            <div class=\\\"main-icon\\\"><mat-icon>class</mat-icon></div>\\n            <div><span class=\\\"title\\\">Mis asignaturas</span></div>\\n            <span class=\\\"spacer\\\"></span>\\n            <button routerLink=\\\"/matricularme\\\" mat-icon-button matTooltip=\\\"Matricularme\\\">\\n              <mat-icon>add_to_queue</mat-icon>\\n            </button>\\n            <button routerLink=\\\"/\\\" mat-icon-button matTooltip=\\\"Volver al Inicio\\\">\\n              <mat-icon>chevron_left</mat-icon>\\n            </button>\\n          </mat-toolbar-row>\\n      </mat-toolbar>\\n    </div>\\n  </div>\\n  <!-- PROGRESS BAR  -->\\n  <div class=\\\"progress-bar-container\\\">\\n    <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n  </div>\\n\\n  <div *ngIf=\\\"subjects.length === 0 && !isLoading\\\" class=\\\"no-results-container\\\">\\n    <h3> No estás matriculado/a en ninguna asignatura. </h3>\\n    <button routerLink=\\\"/matricularme\\\" mat-flat-button color=\\\"success\\\"><mat-icon> add_to_queue </mat-icon> Matricúlate </button>\\n  </div>\\n\\n  <div *ngIf=\\\"!isLoading\\\" class=\\\"subjects\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n    <div *ngFor=\\\"let subject of subjects\\\" fxFlex=\\\"32\\\" fxFlex.sm=\\\"49\\\">\\n      <mat-card class=\\\"subject-card\\\">\\n        <mat-card-header>\\n          <mat-card-title class=\\\"title\\\">{{ subject.nombre }}</mat-card-title>\\n          <mat-card-subtitle class=\\\"subtitle\\\">{{ subject.codigo }}</mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"teacher\\\">\\n          <p> <span> Coordinador: </span> Nombre Apellido Apellido</p>\\n          <p> <span> Profesor: </span> Nombre Apellido Apellido </p>\\n          <p> <span> Profesor: </span> Nombre Apellido Apellido</p>\\n        </mat-card-content>\\n        <mat-card-actions class=\\\"buttons\\\" fxLayoutAlign=\\\"end\\\">\\n          <button (click)=\\\"goToDetails(subject.codigo)\\\" mat-button matTooltip=\\\"Ver detalles\\\" mat-mini-fab color=\\\"info\\\"><mat-icon aria-label=\\\"Ver detalles\\\">  visibility </mat-icon></button>\\n          <button (click)=\\\"confirmDialog(subject.codigo)\\\" mat-button matTooltip=\\\"Desmatricularme\\\" mat-mini-fab color=\\\"warn\\\"><mat-icon aria-label=\\\"Desmatricularme\\\"> remove_from_queue </mat-icon> </button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"/*-----------------------------------------------\\n                   Variables\\n-----------------------------------------------*/\\n.title {\\n  font-weight: 900;\\n  font-size: 20px; }\\nh3 {\\n  font-size: 18px; }\\n.subjects, .no-results-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto; }\\n.no-results-container h3 {\\n  font-size: 24px; }\\n.subject-card {\\n  max-width: 400px;\\n  margin-bottom: 20px; }\\n.subject-card .teacher {\\n    line-height: 0.8;\\n    margin-top: 40px; }\\n.subject-card .teacher span {\\n      color: #002E67;\\n      font-weight: 600px; }\\n.subject-card .buttons {\\n    margin-top: 20px;\\n    margin-bottom: 0px;\\n    margin-right: 0px; }\\n.subject-card .buttons button {\\n      margin-left: 10px;\\n      border-radius: 50% !important; }\\n.main-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto;\\n  padding: 20px 0px; }\\n.progress-bar-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto; }\\n.main-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto; }\\n\"","import { SubjectService } from '../subjects/subject.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ConfirmDialogModel, ConfirmDialogComponent } from '../subjects/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-my-subjects',\n  templateUrl: './my-subjects.component.html',\n  styleUrls: ['./my-subjects.component.scss']\n})\n\nexport class MySubjectsComponent implements OnInit {\n  subjects = [];\n  ids = [];\n  isLoading = true;\n  result: string = '';\n\n  constructor(\n    private subjectService: SubjectService,\n    private toastr: ToastrService,\n    private router: Router,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    this.getAll();\n  }\n\n  getAll(filterValue?: String) {\n    this.isLoading = true;\n    this\n    .subjectService\n    .getMySubjects()\n    .subscribe((result) => {\n      result.forEach(subject => {\n        this.ids.push(subject.codeSubject);\n      });\n      console.log(this.ids);\n      this\n      .subjectService\n      .getSubjectsFromIds(this.ids)\n      .subscribe((subjectsResult: any) => {\n        // console.log(subjectsResult);\n        let aux: any;\n        aux = JSON.parse(subjectsResult);\n        aux.forEach(element => {\n          this.subjects.push(element);\n        });\n        // console.log(this.subjects);\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n      }, (error) => {\n        console.log(error);\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n      });\n    }, (error) => {\n      console.log(error);\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 1000);\n    });\n  }\n  goToDetails(code) {\n    this\n    .subjectService\n    .enrolled(code)\n    .subscribe((result) => {\n      this.router.navigateByUrl('/detail/' + code);\n    }, (error) => {\n      this.toastr.warning('No estás matriculado en la asignatura. Utiliza el código de acceso.', 'Ups!');\n    });\n  }\n\n  confirmDialog(code): void {\n    const message = `¿Estás segura/o que quieres desmatricularte?`;\n\n    const dialogData = new ConfirmDialogModel('Desmatriculación', message);\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '800px',\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.result = dialogResult;\n      if (this.result) {\n        this\n        .subjectService\n        .remove(code)\n        .subscribe((result) => {\n          this.toastr.success('Se ha desmatriculado de: ' + code + ' correctamente.', 'Correcto!');\n          window.location.reload();\n        }, (error) => {\n          console.error(error);\n          this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n        });\n      }\n    });\n  }\n}\n","module.exports = \"<div class=\\\"screen gradient\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div>\\n    <div class=\\\"not-found-container\\\">\\n      <a [routerLink]=\\\"['/']\\\" id=\\\"logo\\\">\\n        <!-- <img class=\\\"logo\\\" src=\\\"../../assets/img/logo-text.gif\\\" alt=\\\"GPSP\\\" /> -->\\n      </a>      \\n      <p class=\\\"not-found\\\">404</p>\\n      <p class=\\\"not-found-text\\\">Página no encontrada</p>\\n      <br /><br />\\n      <button mat-raised-button routerLink=\\\"/\\\" color=\\\"alert\\\" class=\\\"mat-elevation-z8\\\">VOLVER</button>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"/*-----------------------------------------------\\n                   Variables\\n-----------------------------------------------*/\\n.screen {\\n  width: 100%;\\n  height: 100%; }\\n.screen #logo {\\n    background: url('ulpgc_graficos_v14.svg') -641px -2128px no-repeat;\\n    background-size: 1900px;\\n    width: 330px;\\n    height: 70px;\\n    display: block; }\\n.screen.gradient {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    background-color: #002e67;\\n    /* Old browsers */\\n    /* FF3.6-15 */\\n    /* Chrome10-25,Safari5.1-6 */\\n    background: linear-gradient(to bottom, #002e67 0%, #42648e 100%);\\n    /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#002e67', endColorstr='#42648e',GradientType=1 );\\n    /* IE6-9 fallback on horizontal gradient */ }\\n.screen .not-found-container {\\n    text-align: center; }\\n.screen .not-found-container .logo {\\n      width: 400px;\\n      max-width: 400px; }\\n.screen .not-found-container .not-found {\\n      font-size: 120px;\\n      margin-top: 10px;\\n      margin-bottom: 10px;\\n      color: #fff; }\\n.screen .not-found-container .not-found-text {\\n      font-size: 20px;\\n      color: #fff; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <!-- <h2> Asignaturas </h2>-->\\n    <div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div fxFlex=\\\"100\\\">\\n        <mat-toolbar color=\\\"accent\\\">\\n            <mat-toolbar-row>\\n              <div class=\\\"main-icon\\\"><mat-icon>face</mat-icon></div>\\n              <div><span class=\\\"title\\\"> Perfil </span></div>\\n              <span class=\\\"spacer\\\"></span>\\n              <button mat-icon-button>\\n                <mat-icon>notifications</mat-icon>\\n              </button>\\n              <button routerLink=\\\"/\\\" mat-icon-button matTooltip=\\\"Volver al Inicio\\\">\\n                <mat-icon>chevron_left</mat-icon>\\n              </button>\\n            </mat-toolbar-row>\\n        </mat-toolbar>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!user\\\" class=\\\"profile-wrap main-container\\\">\\n      <h3> No has iniciado sesión en la plataforma </h3>\\n      <button routerLink=\\\"/auth/login\\\" mat-flat-button color=\\\"success\\\"><mat-icon> person </mat-icon> Iniciar sesión </button>\\n    </div>\\n    <div *ngIf=\\\"user\\\" class=\\\"subjects\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n      <div fxFlex=\\\"49\\\" fxFlex.sm=\\\"49\\\">\\n        <mat-card class=\\\"subject-card\\\">\\n          <mat-card-header>\\n            <mat-card-title class=\\\"title\\\"> Información </mat-card-title>\\n            <mat-card-subtitle class=\\\"subtitle\\\">Estos son tus datos de usuario</mat-card-subtitle>\\n          </mat-card-header>\\n          <mat-card-content class=\\\"teacher\\\">\\n            <p> <span> Nombre: </span>{{ user.fullname }} </p>\\n            <p> <span> Dni: </span>{{ user.dni }} </p>\\n            <p> <span> Email: </span>{{ user.email }} </p>\\n            <p> <span> Teléfono: </span>{{ user.telefono }} </p>\\n            <p> <span> Bio: </span>{{ user.bio }} </p>\\n            <p> <span> Ciudad: </span>{{ user.ciudad }} </p>\\n            <p> <span> Dirección: </span>{{ user.direccion }} </p>\\n          </mat-card-content>\\n          <mat-card-actions class=\\\"buttons\\\" fxLayoutAlign=\\\"end\\\">\\n            <button mat-button matTooltip=\\\"Editar información\\\" mat-mini-fab color=\\\"info\\\"><mat-icon aria-label=\\\"Ver detalles\\\"> edit </mat-icon></button> </mat-card-actions>\\n        </mat-card>\\n      </div>\\n      <div fxFlex=\\\"49\\\" fxFlex.sm=\\\"49\\\">\\n        <mat-card class=\\\"subject-card\\\">\\n          <mat-card-header>\\n            <mat-card-title class=\\\"title\\\"> Asignaturas </mat-card-title>\\n            <mat-card-subtitle class=\\\"subtitle\\\">Estas son las asignaturas a las que estás matriculado/a.</mat-card-subtitle>\\n          </mat-card-header>\\n\\n          <!-- PROGRESS BAR  -->\\n          <div class=\\\"progress-bar-container\\\" class=\\\"progress-bar-container\\\">\\n            <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n          </div>\\n        \\n          <mat-card-content *ngIf=\\\"subjects.length === 0 && !isLoading\\\" class=\\\"no-results-container\\\">\\n            <h3> No estás matriculado/a en ninguna asignatura. </h3>\\n          </mat-card-content>\\n\\n          <mat-card-content class=\\\"teacher\\\" *ngIf=\\\"subjects && !isLoading\\\">\\n            <p *ngFor=\\\"let subject of subjects\\\"> <span>{{ subject.codigo }} </span> {{ subject.nombre }} </p>\\n          </mat-card-content>\\n          <mat-card-actions class=\\\"buttons\\\" fxLayoutAlign=\\\"end\\\">\\n            <button *ngIf=\\\"subjects.length === 0 && !isLoading\\\" routerLink=\\\"/matricularme\\\" matTooltip=\\\"MAtricularme\\\" mat-mini-fab color=\\\"info\\\"><mat-icon> add_to_queue </mat-icon></button>\\n            <button *ngIf=\\\"subjects && !isLoading\\\" routerLink=\\\"/subjects\\\" matTooltip=\\\"Listar asignaturas\\\" mat-mini-fab color=\\\"info\\\"><mat-icon aria-label=\\\"Ver detalles\\\"> sort </mat-icon></button> \\n          </mat-card-actions>\\n        </mat-card>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"/*-----------------------------------------------\\n                   Variables\\n-----------------------------------------------*/\\n.main-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto; }\\nh3 {\\n  font-size: 18px; }\\n.title {\\n  font-weight: 900;\\n  font-size: 20px; }\\n.subjects, .no-results-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto;\\n  padding: 20px 0; }\\n.no-results-container h3 {\\n  font-size: 24px; }\\n.subject-card {\\n  margin-bottom: 20px; }\\n.subject-card .teacher {\\n    line-height: 0.8;\\n    margin-top: 40px; }\\n.subject-card .teacher span {\\n      color: #002E67;\\n      font-weight: 600px; }\\n.subject-card .buttons {\\n    margin-top: 20px;\\n    margin-bottom: 0px;\\n    margin-right: 0px; }\\n.subject-card .buttons button {\\n      margin-left: 10px;\\n      border-radius: 50% !important; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { SubjectService } from '../subjects/subject.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  subjects = [];\n  ids = [];\n  isLoading = true;\n  result = '';\n  user: any;\n\n  constructor(\n    private subjectService: SubjectService,\n    private toastr: ToastrService,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.authService.me().subscribe(data => {\n      if ( !data ) { this.user = null;\n      } else { this.user = data.user; }\n    });\n    this.getAll();\n  }\n\n  getAll(filterValue?: String) {\n    this.isLoading = true;\n    this\n    .subjectService\n    .getMySubjects()\n    .subscribe((result) => {\n      result.forEach(subject => {\n        this.ids.push(subject.codeSubject);\n      });\n      console.log(this.ids);\n      this\n      .subjectService\n      .getSubjectsFromIds(this.ids)\n      .subscribe((subjectsResult: any) => {\n        // console.log(subjectsResult);\n        let aux: any;\n        aux = JSON.parse(subjectsResult);\n        aux.forEach(element => {\n          this.subjects.push(element);\n        });\n        // console.log(this.subjects);\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n      }, (error) => {\n        console.log(error);\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n      });\n    }, (error) => {\n      console.log(error);\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 1000);\n    });\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Crear petición </h1>\\n<div mat-dialog-content class=\\\"create-request-dialog\\\">\\n  <form [formGroup]=\\\"createRequestForm\\\" (ngSubmit)=\\\"createRequest()\\\">\\n    <mat-card>\\n      <mat-card-header>\\n        <!-- ASIGNATURA -->\\n        <mat-form-field>\\n          <mat-label>Asignatura</mat-label>\\n          <mat-select formControlName=\\\"subject\\\">\\n            <mat-option> -- </mat-option>\\n            <mat-optgroup *ngFor=\\\"let group of subjectGroups\\\" [label]=\\\"group.name\\\">\\n              <mat-option *ngFor=\\\"let subject of group.subject\\\" [value]=\\\"subject\\\">\\n                {{subject.codigo}}: {{subject.nombre}}\\n              </mat-option>\\n            </mat-optgroup>\\n          </mat-select>\\n          <mat-error *ngIf=\\\"createRequestForm.get('subject').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /ASIGNATURA -->\\n      </mat-card-header>\\n      <mat-card-content>\\n        <!-- SOFTWARE -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label> Software </mat-label>\\n          <textarea matInput #software name=\\\"software\\\" formControlName=\\\"software\\\" placeholder=\\\"Software\\\"> </textarea>\\n          <mat-error *ngIf=\\\"createRequestForm.get('software').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /SOFTWARE -->\\n      </mat-card-content>\\n    </mat-card>\\n    <div mat-dialog-actions align=\\\"end\\\">\\n      <button type=\\\"button\\\" mat-button mat-dialog-close color=\\\"warn\\\">CANCELAR</button>\\n      <button type=\\\"submit\\\" mat-button color=\\\"success\\\"> ENVIAR </button>\\n    </div>    \\n  </form>\\n</div>\\n\"","module.exports = \"h1 {\\n  font-size: 22px;\\n  font-weight: 800; }\\n\\n.create-request-dialog {\\n  font-family: 'Raleway'; }\\n\\n.create-request-dialog h3 {\\n    color: rgba(48, 48, 48, 0.690196);\\n    margin-top: 0; }\\n\\n.create-request-dialog mat-card {\\n    margin-bottom: 25px; }\\n\\n.create-request-dialog mat-card mat-card-title {\\n      font-size: 20px;\\n      font-weight: 500;\\n      color: rgba(0, 0, 0, 0.72); }\\n\\n.create-request-dialog mat-card .mat-card-actions {\\n      margin-bottom: 0;\\n      padding-bottom: 0; }\\n\\n.create-request-dialog .create-password-container {\\n    margin-top: -18px; }\\n\\n.create-request-dialog .send-email-container {\\n    width: 100%; }\\n\\n.create-request-dialog .permits-container {\\n    width: 50%;\\n    margin-top: 25px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubjectService } from '../../subjects/subject.service';\nimport { of } from 'rxjs';\n\nexport interface Subject {\n  codigo: string;\n  nombre: string;\n}\n\nexport interface SubjectGroup {\n  disabled?: boolean;\n  name: string;\n  subject: Subject[];\n}\n\n@Component({\n  selector: 'app-create-request',\n  templateUrl: './create-request.component.html',\n  styleUrls: ['./create-request.component.scss']\n})\n\nexport class CreateRequestComponent {\n  //\n  // Main user object\n  //\n  createRequestForm = this.fb.group({\n    software: ['', [Validators.required]],\n    subject: ['', [Validators.required]]\n  });\n\n  subjectGroups: SubjectGroup[] = [\n    {\n      name: 'Primero',\n      subject: [\n        { codigo: '40800', nombre: 'Álgebra' },\n        { codigo: '40803', nombre: 'Introducción a la Informática' },\n        { codigo: '40807', nombre: 'Fundamentos de Programación' },\n        { codigo: '40808', nombre: 'Fundamentos de los Computadores' },\n        { codigo: '40806', nombre: 'Fundamentos Físicos de la Informática' },\n        { codigo: '40805', nombre: 'Matemáticas Computacionales' }\n      ]\n    },\n    {\n      name: 'Segundo',\n      subject: [\n        { codigo: '40813', nombre: 'Programación I' },\n        { codigo: '40816', nombre: 'Bases de Datos I' },\n        { codigo: '40813', nombre: 'Ingeniería del Software I' },\n        { codigo: '40818', nombre: 'Programación II' },\n        { codigo: '40814', nombre: 'Fundamentos de los Sistemas Operativos' },\n      ]\n    },\n    {\n      name: 'Tercero',\n      subject: [\n        { codigo: '40819', nombre: 'Administración de Sistemas Operativos' },\n        { codigo: '40821', nombre: 'Bases de Datos II' },\n        { codigo: '40823', nombre: 'Programación III' },\n        { codigo: '40826', nombre: 'Programación IV' },\n        { codigo: '40824', nombre: 'Servicios y Seguridad en Red' },\n      ]\n    },\n    {\n      name: 'Cuarto',\n      subject: [\n        { codigo: '40863', nombre: 'Desarrollo de Aplicaciones Web II' },\n        { codigo: '40832', nombre: 'Metodologías del Desarrollo Ágil' },\n        { codigo: '40829', nombre: 'Arquitectura del Software' },\n        { codigo: '40861', nombre: 'Desarrollo de Aplicaciones Web I' },\n        { codigo: '40830', nombre: 'Diseño de Interfaces de Usuario' },\n      ]\n    }\n  ];\n\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private subject: SubjectService,\n              private dialog: MatDialogRef<CreateRequestComponent>,\n              private formBuilder: FormBuilder,\n              @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n\n  /**\n   * createRequest\n   * Add request to database.\n   *\n   */\n  createRequest(): void {\n\n    // Validation\n    if ( this.createRequestForm.invalid ) { return; }\n\n    //\n    // Validation OK\n    //\n    const request = this.createRequestForm.value;\n    console.log('PRUEBA: ' + JSON.stringify(request));\n    this\n      .subject\n      .createRequest(request)\n      .subscribe(\n        (request) => {\n          this.toastr.success('Petición enviada correctamente', 'Confirmación');\n          this.dialog.close(request);\n        },\n        (error: any) => {\n          this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n        });\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div fxFlex=\\\"100\\\">\\n          <mat-toolbar color=\\\"accent\\\">\\n              <mat-toolbar-row>\\n                <div class=\\\"main-icon\\\"><mat-icon>notification_important</mat-icon></div>\\n                <div><span class=\\\"title\\\">Mis Peticiones</span></div>\\n                <span class=\\\"spacer\\\"></span>\\n                <button (click)=\\\"openCreateRequestDialog()\\\" mat-icon-button matTooltip=\\\"Crear\\\">\\n                  <mat-icon>add_alert</mat-icon>\\n                </button>\\n                <button routerLink=\\\"/\\\" mat-icon-button matTooltip=\\\"Volver al Inicio\\\">\\n                  <mat-icon>chevron_left</mat-icon>\\n                </button>\\n              </mat-toolbar-row>\\n          </mat-toolbar>\\n\\n          <!-- PROGRESS BAR  -->\\n          <div class=\\\"progress-bar-container\\\" class=\\\"main-container progress-bar-container\\\">\\n            <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n          </div>\\n\\n          <!-- NO ITEMS FOR SHOWING -->\\n          <div *ngIf=\\\"!isLoading && requests === null\\\" class=\\\"no-results-container\\\">\\n            <h3> No has creado ninguna petición </h3>\\n          </div>\\n\\n          <!-- RESULTS -->\\n          <div class=\\\"requests\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n            <mat-card class=\\\"element\\\" *ngFor=\\\"let request of requests\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between start\\\">\\n              <div fxFlex=\\\"49\\\" fxFlex.sm=\\\"49\\\">\\n                <h3> {{ request.nameSubject }} </h3>\\n                <p>  {{ request.codeSubject }} </p>\\n              </div>\\n              <div fxFlex=\\\"49\\\" fxFlex.sm=\\\"49\\\">\\n                <h4> Software </h4>\\n                <!-- <p>\\n                  {{request.software}}\\n                </p> -->\\n                <p> Visual Studio Code - Versión: 1.12</p>\\n                <p> Oracle Server - Versión: 11g </p>\\n                <p> Pycharm - Versión: 2.14 </p>\\n                <p> R Studio - Versión: 1.1 </p>\\n              </div>\\n            </mat-card>\\n          </div>\\n      </div>\\n    </div>\\n</div>\"","module.exports = \".title {\\n  font-weight: 900;\\n  padding-left: 5px; }\\n\\n.main-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto;\\n  padding: 20px 0px; }\\n\\nh3 {\\n  font-size: 18px; }\\n\\n.no-results-container {\\n  margin-top: 40px; }\\n\\n.requests .element {\\n  margin-bottom: 40px; }\\n\"","import { Component, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { Subject as SubjectRxjs } from 'rxjs';\nimport { debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { CreateRequestComponent } from './create-request/create-request.component';\nimport { SubjectService } from '../subjects/subject.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-request',\n  templateUrl: './request.component.html',\n  styleUrls: ['./request.component.scss']\n})\nexport class RequestComponent implements OnInit {\n  requests = null;\n  isLoading = true;\n  //\n  // Dialogs\n  //\n  createRequestDialog: any = null;\n\n  constructor(\n    private subjectService: SubjectService,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this\n      .subjectService\n      .getRequest()\n      .subscribe(\n        (request) => {\n          console.log(request);\n          this.requests = request;\n          console.log(\"Request: \" + request);\n          this.isLoading = false;\n        },\n        (error: any) => {\n          this.isLoading = false;\n        });\n  }\n\n  /**\n   * openCreateRequestDialog\n   * Open the request create dialog\n   *\n   */\n\n  openCreateRequestDialog () {\n    this.createRequestDialog = this.dialog.open(CreateRequestComponent, {\n      width: '700px',\n      data: {\n        dialog: this.createRequestDialog\n      }\n    });\n\n    this.createRequestDialog.afterClosed().subscribe((request) => {\n      this.ngOnInit();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {\n  MatToolbarModule,\n  MatMenuModule,\n  MatTabsModule,\n  MatDividerModule,\n  MatCardModule,\n  MatListModule,\n  MatExpansionModule,\n  MatButtonModule,\n  MatIconModule,\n  MatDialogModule,\n  MatInputModule,\n  MatSnackBarModule,\n  MatSidenavModule,\n  MatTreeModule,\n  MatProgressBarModule,\n  MatFormFieldModule,\n  MatSelectModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatBadgeModule,\n  MatAutocompleteModule,\n  MatButtonToggleModule,\n  MatSlideToggleModule,\n  MatProgressSpinnerModule,\n  MatTooltipModule,\n  MatCheckboxModule,\n  MatSortModule,\n  MatGridListModule,\n  ErrorStateMatcher,\n  ShowOnDirtyErrorStateMatcher\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatCardModule,\n    MatListModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSnackBarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSidenavModule,\n    MatTreeModule,\n    MatProgressBarModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatSortModule,\n    FlexLayoutModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatCardModule,\n    MatListModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatInputModule,\n    MatSnackBarModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSidenavModule,\n    MatTreeModule,\n    MatProgressBarModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatButtonToggleModule,\n    MatSlideToggleModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatSortModule,\n    FlexLayoutModule,\n  ],\n  declarations: [],\n  providers: []\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of, EMPTY } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatriculateService {\n\n  constructor(private http: HttpClient) { }\n\n  matriculate(subjectCode, accessCode): Observable<any> {\n    const url = '/api/matriculate/add';\n    const data = {'subjectCode': subjectCode, 'accessCode': accessCode};\n    return this.http\n      .post<any> (url, data,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <!-- PROGRESS BAR  -->\\n  <div class=\\\"progress-bar-container\\\" class=\\\"progress-bar-container\\\">\\n    <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n  </div>\\n  <div *ngIf=\\\"subject && isEnrolled && !isLoading\\\" class=\\\"subject-wrap\\\">\\n    <h2> {{ subject.nombre }} </h2>\\n    <mat-grid-list cols=\\\"5\\\" rowHeight=\\\"100px\\\">\\n      <mat-grid-tile class=\\\"grid\\\"\\n          *ngFor=\\\"let detail of details\\\"\\n          [colspan]=\\\"detail.cols\\\"\\n          [rowspan]=\\\"detail.rows\\\"\\n          [style.background]=\\\"detail.color\\\">\\n        <h3> {{detail.title}} </h3>\\n        <p>{{detail.text}} </p>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n    <mat-list fxLayout=\\\"row wrap\\\" class=\\\"files-wrap\\\">\\n      <div fxFlex=\\\"50\\\">\\n        <h3 mat-subheader>Ficheros</h3>\\n        <mat-list-item *ngFor=\\\"let doc of docs\\\">\\n          <mat-icon mat-list-icon>{{ doc.icon }}</mat-icon>\\n          <h4 mat-line>{{doc.name}}</h4>\\n          <p mat-line> {{doc.updated | date}} </p>\\n        </mat-list-item>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div fxFlex=\\\"50\\\">\\n        <h3 mat-subheader>Máquina Virtual</h3>\\n        <mat-list-item *ngFor=\\\"let mvi of mv\\\">\\n          <mat-icon mat-list-icon>{{ mvi.icon }} </mat-icon>\\n          <h4 mat-line>{{ mvi.name}}</h4>\\n          <p mat-line> {{ mvi.updated | date}} </p>\\n        </mat-list-item>\\n      </div>\\n    </mat-list>\\n  </div>\\n  <div *ngIf=\\\"!subject && !isLoading\\\" class=\\\"subject-wrap\\\">\\n    <p> No existe esta asignatura </p>\\n  </div>\\n  <div *ngIf=\\\"!isEnrolled && !isLoading\\\" class=\\\"subject-wrap\\\">\\n    <p> No estás matriculado en esta asignatura. </p>\\n    <p> Utiliza el código de acceso o contacta con el coordinador. </p>\\n  </div>\\n  <img (click)=\\\"goBack()\\\" id=\\\"return\\\" src=\\\"../../assets/icons/previous.svg\\\">\\n</div>\\n\"","module.exports = \"/*-----------------------------------------------\\n                   Variables\\n-----------------------------------------------*/\\n#return {\\n  position: absolute;\\n  top: 110px;\\n  right: 45px;\\n  width: 60px;\\n  height: 60px;\\n  cursor: pointer;\\n  transition: all .5s; }\\n#return:hover {\\n  filter: hue-rotate(145deg);\\n  -webkit-filter: hue-rotate(145deg);\\n  -moz-filter: hue-rotate(145deg);\\n  -o-filter: hue-rotate(145deg);\\n  -ms-filter: hue-rotate(145deg); }\\n::ng-deep .mat-grid-tile .mat-figure {\\n  display: block !important;\\n  padding: 10px !important; }\\n::ng-deep .mat-grid-tile .mat-figure h3 {\\n    font-size: 20px;\\n    margin: 0px; }\\ntextarea {\\n  width: 90%;\\n  min-height: 15rem;\\n  font-family: \\\"Lucida Console\\\", Monaco, monospace;\\n  font-size: 0.8rem;\\n  line-height: 1.2;\\n  padding: 50px 6%; }\\n.files-wrap {\\n  margin-top: 10px; }\\n::ng-deep .mat-list-item-content {\\n  max-width: 230px;\\n  cursor: pointer;\\n  transition: all .5s; }\\n::ng-deep .mat-list-item-content:hover h4 {\\n  color: #ff9a00;\\n  font-weight: bold; }\\nh2 {\\n  padding-top: 30px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Subject } from '../subjects/subject';\nimport { SubjectService } from '../subjects/subject.service';\nimport { MatriculateService } from './matriculate.service';\nimport { ToastrService } from 'ngx-toastr';\n\nexport interface Details {\n  title: string;\n  color: string;\n  cols: number;\n  rows: number;\n  text: string;\n}\n\nexport interface Section {\n  icon: string;\n  name: string;\n  updated: Date;\n}\n\n@Component({\n  selector: 'app-subject-detail',\n  templateUrl: './subject-detail.component.html',\n  styleUrls: ['./subject-detail.component.scss']\n})\nexport class SubjectDetailComponent implements OnInit {\n  @Input() subject: any;\n  code: any;\n  details: Details[];\n  isLoading = true;\n  @Input() isEnrolled: Boolean;\n\n  docs: Section[] = [\n    {\n      icon: 'description',\n      name: 'Temario',\n      updated: new Date('1/1/19'),\n    },\n    {\n      icon: 'face',\n      name: 'Profesorado',\n      updated: new Date('1/17/19'),\n    },\n    {\n      icon: 'date_range',\n      name: 'Horario Académico',\n      updated: new Date('1/28/19'),\n    },\n    {\n      icon: 'book',\n      name: 'Proyecto Docente',\n      updated: new Date('1/28/19'),\n    }\n  ];\n  mv: Section[] = [\n    {\n      icon: 'dns',\n      name: 'archivo.disk',\n      updated: new Date('2/20/19'),\n    },\n    {\n      icon: 'offline_bolt',\n      name: 'imagen.iso',\n      updated: new Date('1/18/19'),\n    },\n    {\n      icon: 'storage',\n      name: 'otro.sql',\n      updated: new Date('2/20/19'),\n    },\n    {\n      icon: 'folder',\n      name: 'hard-disk.mv',\n      updated: new Date('1/18/19'),\n    }\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private subjectService: SubjectService,\n    private matriculateService: MatriculateService,\n    private toastr: ToastrService,\n    private location: Location,\n    private router: Router\n  ) {\n}\n\n  ngOnInit(): void {\n    this.getSubject();\n    this.router.events.subscribe((val) => {\n      this.getSubject();\n    });\n  }\n\n  getSubject(): void {\n    this.isLoading = true;\n    this.code = +this.route.snapshot.paramMap.get('code');\n    console.log(this.code);\n    this.enrolled(this.code);\n    this.subject = this.subjectService.getSubject(this.code).subscribe(\n      (res) => {\n        this.subject = res;\n        // console.log(this.subject);\n        this.details = [\n          {title: 'Titulación', text: this.subject.titulacion, cols: 1, rows: 1, color: 'lightblue'},\n          {title: 'Especialidad', text: this.subject.especialidad, cols: 1, rows: 1, color: 'lightblue'},\n          {title: 'Centro', text: this.subject.centro, cols: 2, rows: 1, color: 'lightblue'},\n          {title: 'Curso', text: this.subject.curso, cols: 1, rows: 1, color: '#DDBDF1'},\n          {title: 'Departamento', text: this.subject.departamento, cols: 1, rows: 1, color: 'lightblue'},\n          {title: 'Tipo', text: this.subject.tipo, cols: 1, rows: 1, color: 'lightblue'},\n          {title: 'Carácter', text: this.subject.caracter, cols: 1, rows: 1, color: 'lightblue'},\n          {title: 'Créditos', text: this.subject.creditos, cols: 1, rows: 1, color: 'lightblue'},\n          {title: 'Duración', text: this.subject.duracion, cols: 1, rows: 1, color: '#DDBDF1'},\n        ];\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n      }\n    );\n  }\n\n  enrolled(code) {\n    this\n    .subjectService\n    .enrolled(code)\n    .subscribe((subjectService) => {\n      this.isEnrolled = true;\n    }, (error) => {\n      this.isEnrolled = false;\n    });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>\\n  {{title}}\\n</h1>\\n  \\n<div mat-dialog-content>\\n  <p>{{message}}</p>\\n</div>\\n  \\n<div mat-dialog-actions fxLayoutAlign=\\\"end\\\">\\n  <button mat-button (click)=\\\"onDismiss()\\\">Cancelar</button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onConfirm()\\\">Desmatricular</button>\\n</div>\"","module.exports = \"h1 {\\n  font-size: 24px;\\n  font-weight: 900;\\n  margin-bottom: 0px; }\\n\\n.mat-dialog-content {\\n  font-family: 'Raleway' !important;\\n  font-size: 16px !important;\\n  margin-bottom: 30px; }\\n\"","import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel) {\n    // Update view with given values\n    this.title = data.title;\n    this.message = data.message;\n  }\n\n  ngOnInit() {\n  }\n\n  onConfirm(): void {\n    // Close the dialog, return true\n    this.dialogRef.close(true);\n  }\n\n  onDismiss(): void {\n    // Close the dialog, return false\n    this.dialogRef.close(false);\n  }\n}\n\n/**\n * Class to represent confirm dialog model.\n *\n * It has been kept here to keep it as part of shared component.\n */\nexport class ConfirmDialogModel {\n\n  constructor(public title: string, public message: string) {\n  }\n}\n","module.exports = \"<form [formGroup]=\\\"enrollForm\\\" (ngSubmit)=\\\"enrollUser()\\\">\\n  <h1 mat-dialog-title>Matriculación</h1>\\n  <div mat-dialog-content>\\n    <p>Introduce el código de acceso</p>\\n    <mat-form-field>\\n      <input matInput formControlName=\\\"accessCode\\\" maxlength=\\\"20\\\" minlength=\\\"5\\\">\\n      <mat-error *ngIf=\\\"enrollForm.get('accessCode').hasError('required')\\\">\\n        Este campo es obligatorio\\n      </mat-error>\\n    </mat-form-field>\\n  </div>\\n  <div mat-dialog-actions align=\\\"end\\\"> \\n    <button mat-button (click)=\\\"onNoClick()\\\" color=\\\"primary\\\">Cancelar</button>\\n    <button mat-button type=\\\"submit\\\" cdkFocusInitial color=\\\"success\\\">Enviar</button>\\n  </div>\\n</form>\"","module.exports = \"h1 {\\n  font-weight: 900;\\n  font-size: 25px; }\\n\\np {\\n  font-family: Arial, Helvetica, sans-serif; }\\n\\nform {\\n  padding: 30px 15px; }\\n\"","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { SubjectService } from '../subject.service';\n\n@Component({\n  selector: 'app-enroll-dialog',\n  templateUrl: './enroll-dialog.component.html',\n  styleUrls: ['./enroll-dialog.component.scss']\n})\n\nexport class EnrollDialogComponent implements OnInit {\n  enrollForm = this.fb.group({\n    accessCode: ['', [Validators.required]]\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<EnrollDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    private subjectService: SubjectService,\n  ) {}\n\n  ngOnInit() { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  enrollUser() {\n    // Validation\n    const inputCode: string = this.enrollForm.value.accessCode;\n    const subjectCode: string = this.data.subjectCode;\n    const enrollCode: string = this.data.enrollCode;\n    if ( this.enrollForm.invalid ) {\n      return;\n    }\n    if (inputCode.toString() !== enrollCode.toString()) {\n      this.toastr.error('El código de matriculación no es correcto. Inténtalo de nuevo o contacta con un administrador.', 'Error!');\n      return;\n    }\n\n    this\n    .subjectService\n    .enrolled(subjectCode)\n    .subscribe((res) => {\n      this.toastr.warning('Ya estás matriculado en esta asignatura.', 'Error!');\n    }, (error) => {\n\n      // Matriculación\n      this\n      .subjectService\n      .enroll(subjectCode)\n      .subscribe((res) => {\n        console.log(res);\n        this.toastr.success('Has sido matriculado en ' + subjectCode + '. Tienes acceso a los contenidos de la asignatura.', '¡Bienvenido!');\n        this.dialogRef.close();\n      }, (er) => {\n        this.toastr.warning('Ha habido un error inesperado. Consulta con un administrador.', 'Ups!');\n        this.dialogRef.close();\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from './subject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  constructor(private http: HttpClient) { }\n  /**\n   * getAll\n   * Retrieves posts from backend. Different kind of\n   * params are allowed.\n   *\n   * @param params - Query\n   * @param loading - Must show main loading bar?\n   */\n\n  getAll(params?: any, loading?: string): Observable<string | any> {\n\n    const url = '/api/subject/all';\n\n    return this.http\n      .get<any>(url, {\n        params: params,\n        headers: loading === 'no-loading-bar' ? new HttpHeaders({ ignoreLoadingBar: '' }) : {}\n      });\n  }\n\n  /*getMySubjects(params?: any, loading?: string): Observable<string | any> {\n    const url = '/api/subject/mysubjects';\n\n    return this.http\n      .get<any>(url, {\n        params: params,\n        headers: loading === 'no-loading-bar' ? new HttpHeaders({ ignoreLoadingBar: '' }) : {}\n      });\n  }*/\n\n  getMySubjects(): Observable<any> {\n    const url = '/api/subject/mysubjects';\n    return this.http\n      .post<any> (url,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n\n  getSubject(code): Observable<any> {\n    let params = new HttpParams();\n    params = params.set('code', code);\n    const url = '/api/subject/get';\n    return this.http.get(url, { params });\n  }\n\n\n  /* Returns if an user is enrolled in a subject */\n  enrolled(code): Observable<any> {\n    const url = '/api/subject/enrolled';\n    const data = {'code': code };\n    return this.http\n      .post<any> (url, data,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n\n  /* Enroll user */\n  enroll(code): Observable<any> {\n    const url = '/api/enroll/add';\n    const data = {'codeSubject': code };\n    return this.http\n      .post<any> (url, data,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n\n  /* Remove enroll user */\n  remove(code): Observable<any> {\n    const url = '/api/enroll/remove';\n    const data = {'codeSubject': code };\n    return this.http\n      .post<any> (url, data,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n\n  getSubjectsFromIds(ids): Observable<any> {\n    const url = '/api/subject/getfromids';\n    const data = {'ids': ids};\n    return this.http\n      .post<any> (url, data,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n\n  /* Create software request */\n  createRequest(request): Observable<any> {\n    const url = '/api/request/add';\n    const data = request;\n    return this.http\n      .post<any> (url, data,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n\n  /* Remove request */\n  removeRequest(code): Observable<any> {\n    const url = '/api/request/remove';\n    const data = {'codeSubject': code };\n    return this.http\n      .post<any> (url, data,\n        { headers: {}, responseType: 'text' as 'json' }\n      );\n  }\n\n  /* Get request of user */\n  getRequest(): Observable<any> {\n    const url = '/api/request/get';\n    return this.http.get(url, {});\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <!-- <h2> Asignaturas </h2>-->\\n      <div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <div fxFlex=\\\"100\\\">\\n            <mat-toolbar color=\\\"accent\\\">\\n                <mat-toolbar-row>\\n                  <div class=\\\"main-icon\\\"><mat-icon>class</mat-icon></div>\\n                  <div><span class=\\\"title\\\">Asignaturas</span></div>\\n                  <span class=\\\"spacer\\\"></span>\\n                  <button (click)=\\\"toggleSearchBar();\\\" mat-icon-button matTooltip=\\\"Buscar\\\">\\n                    <mat-icon>search</mat-icon>\\n                  </button>\\n                  <button routerLink=\\\"/\\\" mat-icon-button matTooltip=\\\"Volver al Inicio\\\">\\n                    <mat-icon>chevron_left</mat-icon>\\n                  </button>\\n                </mat-toolbar-row>\\n            </mat-toolbar>\\n            <!-- SEARCH BAR -->\\n            <div *ngIf=\\\"searchBar\\\" class=\\\"search-container\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"searchValue\\\" (ngModelChange)=\\\"didFilterSubjects($event);\\\">\\n                <button mat-button *ngIf=\\\"searchValue\\\" matSuffix mat-icon-button aria-label=\\\"Borrar\\\" (click)=\\\"searchValue='';didFilterSubjects($event)\\\">\\n                  <mat-icon>close</mat-icon>\\n                </button>\\n              </mat-form-field>\\n            </div>\\n\\n              <!-- NO ITEMS FOR SHOWING -->\\n              <div *ngIf=\\\"paginationConfig.totalItems === 0 && !isLoading\\\" class=\\\"no-results-container\\\">\\n                <h3>No hay asignaturas para mostrar</h3>\\n              </div>\\n    \\n              <table class=\\\"subjects-table\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"didSortSubjects($event)\\\" *ngIf=\\\"paginationConfig.totalItems > 0\\\">\\n        \\n                <!-- Codigo Column -->\\n                <ng-container matColumnDef=\\\"codigo\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Código </th>\\n                  <td class=\\\"click\\\" mat-cell *matCellDef=\\\"let subject\\\" (click)=\\\"goToDetails(subject.codigo)\\\"> <strong>{{ subject.codigo }}</strong> </td>\\n                </ng-container>\\n        \\n                <!-- Nombre Column -->\\n                <ng-container matColumnDef=\\\"nombre\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\\n                  <td class=\\\"click\\\" mat-cell *matCellDef=\\\"let subject\\\" (click)=\\\"goToDetails(subject.codigo)\\\"> <strong>{{ subject.nombre }} </strong></td>\\n                </ng-container>\\n    \\n                <!--  Duracion Column -->\\n                <ng-container matColumnDef=\\\"duracion\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Duración </th>\\n                  <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.duracion}} </td>\\n                </ng-container>\\n        \\n                <!-- Curso At Column -->\\n                <ng-container matColumnDef=\\\"curso\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Curso </th>\\n                  <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.curso }} </td>\\n                </ng-container>\\n                <!--  Updated Column -->\\n                <ng-container matColumnDef=\\\"updated\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Actualizado </th>\\n                  <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.updated | date:'longDate' }} </td>\\n                </ng-container>\\n    \\n                <!-- Actions At Column -->\\n                <ng-container matColumnDef=\\\"actions\\\">\\n                  <th mat-header-cell *matHeaderCellDef> </th>\\n                  <td mat-cell *matCellDef=\\\"let subject\\\" class=\\\"text-right\\\">\\n                    <button mat-icon-button matTooltip=\\\"Matricularme\\\" color=\\\"info\\\" (click)=\\\"openDialog(subject.codigo, subject.enrollCode)\\\">\\n                      <mat-icon aria-label=\\\"Matricularme\\\">queue</mat-icon>\\n                    </button>\\n                    <button mat-icon-button matTooltip=\\\"Ver detalles\\\" color=\\\"primary\\\" (click)=\\\"goToDetails(subject.codigo)\\\">\\n                      <mat-icon aria-label=\\\"Ver detalles\\\">visibility</mat-icon>\\n                    </button>\\n                  </td>\\n                </ng-container>\\n    \\n                <!-- Footer -->\\n                <ng-container matColumnDef=\\\"pagination\\\" class=\\\"pagination\\\">\\n                  <td mat-footer-cell *matFooterCellDef colspan=\\\"5\\\">\\n                    <div class=\\\"pagination-container\\\">\\n                      <ul>\\n                        <li *ngFor=\\\"let subject of subjects | paginate: paginationConfig\\\">Prueba</li>\\n                      </ul>\\n                      <pagination-controls [id]=\\\"paginationConfig.id\\\"\\n                      (pageChange)=\\\"didPageChange($event)\\\"\\n                      maxSize=\\\"7\\\"\\n                      directionLinks=\\\"true\\\"\\n                      autoHide=\\\"false\\\"\\n                      responsive=\\\"true\\\"\\n                      previousLabel=\\\"Anterior\\\"\\n                      nextLabel=\\\"Siguiente\\\"\\n                      screenReaderPaginationLabel=\\\"Paginación\\\"\\n                      screenReaderPageLabel=\\\"página\\\"\\n                      screenReaderCurrentLabel=\\\"Estás en la página\\\">\\n                      </pagination-controls>\\n                    </div>\\n                  </td>\\n                </ng-container>\\n        \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n                <tr mat-footer-row *matFooterRowDef=\\\"['pagination']\\\"></tr>\\n              </table>\\n            <!-- /TABLE - All subjects -->\\n          <!-- PROGRESS BAR  -->\\n          <div class=\\\"progress-bar-container\\\" class=\\\"progress-bar-container\\\">\\n            <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n          </div>\\n        </div>\\n      \\n      </div>\\n</div>\"","module.exports = \"/*-----------------------------------------------\\n                   Variables\\n-----------------------------------------------*/\\nh3 {\\n  font-size: 18px; }\\n.subjects-table {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 50px auto; }\\n.ngx-pagination {\\n  padding: 0px;\\n  text-align: center; }\\n.subjects-table td {\\n  padding: 40px 20px; }\\n.subjects-table th {\\n  padding: 20px 20px;\\n  color: #002E67;\\n  font-weight: bold; }\\n.click {\\n  transition: all .5s; }\\n.click:hover {\\n  color: #ff9a00; }\\n.search-container {\\n  max-width: 1024px;\\n  margin: 20px auto 0px; }\\n.title {\\n  font-weight: 900;\\n  padding-left: 5px; }\\n.main-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto;\\n  padding: 20px 0px; }\\n\"","import { SubjectService } from './subject.service';\nimport { Component, OnInit, Output, ViewChild, Inject, Input } from '@angular/core';\nimport { Subject } from './subject';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { EnrollDialogComponent } from './enroll-dialog/enroll-dialog.component';\nimport { Subject as SubjectIn } from 'rxjs';\nimport { debounceTime, distinctUntilChanged} from 'rxjs/operators';\n\n\nexport interface DialogData {\n  acessCode: string;\n}\n\n@Component({\n  selector: 'app-subjects',\n  templateUrl: './subjects.component.html',\n  styleUrls: ['./subjects.component.scss']\n})\nexport class SubjectsComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() searchValue: String;\n  mySubject: Subject;\n  subjects: Subject[] = [];\n\n  paginationConfig: any = {\n    id: 'subjects_pagination',\n    itemsPerPage: 5,\n    currentPage: 1,\n    totalItems: 0\n  };\n\n  searchBar: boolean = false;\n  searchBarInput: SubjectIn<string> = new SubjectIn();\n  sortValue: any;\n  isLoading = true;\n  displayedColumns: string[] = ['codigo', 'nombre', 'duracion', 'curso', 'updated', 'actions'];\n  dataSource = new MatTableDataSource<Subject>(this.subjects);\n  accessCode: string;\n\n  constructor(\n    private subjectService: SubjectService,\n    private toastr: ToastrService,\n    private router: Router,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.getAll();\n\n        this\n      .searchBarInput\n      .pipe(debounceTime(300), distinctUntilChanged())\n      .subscribe(filterValue => {\n        this.getAll();\n      });\n  }\n\n  getAll(filterValue?: String) {\n    this.isLoading = true;\n\n    this\n      .subjectService\n      .getAll({\n        page: this.paginationConfig.currentPage,\n        pageSize: this.paginationConfig.itemsPerPage,\n        sort: this.sortValue && this.sortValue.direction ? this.sortValue.direction : '',\n        sortField: this.sortValue && this.sortValue.active ? this.sortValue.active : '',\n        filter: this.searchValue ? this.searchValue : ''\n      }, 'no-loading-bar')\n      .subscribe((subjects: any) => {\n\n        this.paginationConfig.currentPage = subjects.page;\n        this.paginationConfig.totalItems = subjects.totalDocs;\n        this.paginationConfig.itemsPerPage = subjects.limit;\n        this.dataSource.data = subjects.docs;\n\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n\n      }, (error) => {\n        console.error(error);\n        this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n      });\n  }\n\n  didPageChange (page: number) {\n    this.paginationConfig.currentPage = page;\n    this.getAll();\n  }\n\n  /**\n   * toggleSearchBar\n   * Show or hide the search bar\n   *\n   */\n  toggleSearchBar () {\n    this.searchBar = !this.searchBar;\n  }\n\n  /**\n   * didFilterSubjects\n   * Triggered when user is trying to filter\n   * results by writing in the searching bar.\n   *\n   */\n\n  didFilterSubjects (event: any) {\n    this.searchBarInput.next(event);\n  }\n\n  didSortSubjects (event: any) {\n    this.sortValue = event;\n    this.getAll();\n  }\n\n  goToDetails(code) {\n    this\n    .subjectService\n    .enrolled(code)\n    .subscribe((result) => {\n      this.router.navigateByUrl('/detail/' + code);\n    }, (error) => {\n      this.toastr.warning('No estás matriculado en la asignatura. Utiliza el código de acceso.', 'Ups!');\n    });\n  }\n\n  openDialog(subjectCode, enrollCode): void {\n    const dialogRef = this.dialog.open(EnrollDialogComponent, {\n      width: '400px',\n      data: {accesCode: this.accessCode, subjectCode: subjectCode, enrollCode: enrollCode}\n    });\n\n    /* dialogRef.afterClosed().subscribe(result => {\n      this.goToDetails(subjectCode);\n    }); */\n  }\n\n  checkEnrolled(code) {\n    this\n    .subjectService\n    .enrolled(code)\n    .subscribe((result) => {\n      return true;\n    }, (error) => {\n      return false;\n    });\n  }\n\n}\n\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}