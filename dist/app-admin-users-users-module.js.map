{"version":3,"sources":["webpack:///./src/app/admin/users/user.service.ts","webpack:///./src/app/admin/users/users-create/users-create.component.html","webpack:///./src/app/admin/users/users-create/users-create.component.scss","webpack:///./src/app/admin/users/users-create/users-create.component.ts","webpack:///./src/app/admin/users/users-edit/users-edit.component.html","webpack:///./src/app/admin/users/users-edit/users-edit.component.scss","webpack:///./src/app/admin/users/users-edit/users-edit.component.ts","webpack:///./src/app/admin/users/users-list/users-list.component.html","webpack:///./src/app/admin/users/users-list/users-list.component.scss","webpack:///./src/app/admin/users/users-list/users-list.component.ts","webpack:///./src/app/admin/users/users-routing.module.ts","webpack:///./src/app/admin/users/users.module.ts"],"names":[],"mappings":"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","file":"app-admin-users-users-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { User } from './user';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http : HttpClient) { }\n\n  /**\n   * getAll\n   * Retrieves users from backend. Different kind of\n   * params are allowed.\n   * \n   * @param params - Query\n   * @param loading - Must show main loading bar?\n   */\n\n  getAll(params?: any, loading?: string): Observable<string | any> {\n\n    const url = '/api/user';\n    \n    return this.http\n      .get<any>(url, {\n        params: params,\n        headers: loading === 'no-loading-bar' ? new HttpHeaders({ ignoreLoadingBar: '' }) : {}\n      });\n  }\n\n\n  /**\n   * remove\n   * Removes the user given.\n   * \n   * @param user - Query\n   * @param loading - Must show main loading bar?\n   */\n\n  remove(id: string): Observable<any> {\n\n    const url = '/api/user/' + id;\n\n    return this.http\n      .delete(url, { responseType: 'text' });\n\n  }\n\n\n  /**\n   * create\n   * Creates a new user.\n   * \n   * @param user - New user data\n   */\n\n  create(user: any): Observable<any> {\n\n    const url = '/api/user/new';\n\n    return this.http\n      .post<any>(url, user);\n\n  }\n\n\n  /**\n   * update\n   * Updates the given user.\n   * \n   * @param user - The given user to update\n   */\n\n  update(user: User): Observable<any> {\n\n    const url = '/api/user/' + user._id;\n\n    return this.http\n      .put<any>(url, user, { responseType: 'text' as 'json' });\n\n  }\n\n\n  /**\n   * updatePassword\n   * Updates the given user.\n   * \n   * @param id - The id from the  given user to update\n   * @param passwordForm - Password and check for sending a notification\n   *                       to the given user.\n   */\n\n  updatePassword(id: string, passwordForm: any): Observable<any> {\n\n    const url = '/api/user/' + id + '/password';\n\n    return this.http\n      .put<any>(url, passwordForm, { responseType: 'text' as 'json' });\n\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"saveUser()\\\">\\n  <h1 mat-dialog-title>Crear usuario</h1>\\n  <div mat-dialog-content class=\\\"user-create-dialog\\\">\\n    <h3>Información básica</h3>\\n    <div class=\\\"basic-info-container\\\" fxLayout=\\\"row\\\" fxLayout=\\\"center center\\\">\\n      <div fxFlex=\\\"100\\\" class=\\\"basic-info\\\">\\n        \\n        <!-- NAME -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Nombre</mat-label>\\n          <input matInput #name name=\\\"fullname\\\" formControlName=\\\"fullname\\\" maxlength=\\\"120\\\" placeholder=\\\"Nombre completo\\\">\\n          <mat-error *ngIf=\\\"userForm.get('fullname').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /NAME -->\\n        \\n        <!-- EMAIL -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput #email name=\\\"email\\\" formControlName=\\\"email\\\" maxlength=\\\"120\\\" placeholder=\\\"Correo electrónico\\\">\\n          <mat-error *ngIf=\\\"userForm.get('email').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n          <mat-error *ngIf=\\\"!userForm.get('email').hasError('required') && userForm.get('email').hasError('email')\\\">\\n            El email no es una dirección válida\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /EMAIL -->\\n\\n        <!-- PASSWORD -->\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <div fxFlex=\\\"70\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label> Contraseña</mat-label>\\n              <input type=\\\"{{ isPasswordHidden ? 'password' : 'text' }}\\\" matInput #password name=\\\"password\\\" formControlName=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Contraseña\\\">\\n              <button type=\\\"button\\\" mat-button  matSuffix mat-icon-button aria-label=\\\"Ver contraseña\\\" (click)=\\\"togglePassword();\\\">\\n                <mat-icon>{{ isPasswordHidden ? 'visibility_off' : 'visibility' }}</mat-icon>\\n              </button>\\n              <mat-error *ngIf=\\\"userForm.get('password').hasError('required')\\\">\\n                Este campo es obligatorio\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"create-password-container\\\" fxFlx=\\\"30\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"info\\\" (click)=\\\"generatePassword()\\\">Generar contraseña</button>\\n          </div>\\n        </div>\\n        <!-- /PASSWORD -->\\n\\n        <div class=\\\"send-email-container\\\" style=\\\"width: 100%;\\\">\\n          <mat-checkbox formControlName=\\\"send_email\\\">Enviar acceso y contraseña por correo</mat-checkbox>\\n        </div>\\n\\n        <mat-form-field class=\\\"permits-container\\\">\\n          <mat-label>Permisos</mat-label>\\n          <mat-select formControlName=\\\"roles\\\">\\n            <mat-option *ngFor=\\\"let permit of permits\\\" [value]=\\\"permit\\\">\\n              {{ permit }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n    </div>\\n  </div>\\n  <div mat-dialog-actions align=\\\"end\\\">\\n    <button type=\\\"button\\\" mat-button mat-dialog-close color=\\\"warn\\\">Cancelar</button>\\n    <button type=\\\"submit\\\" mat-button cdkFocusInitial color=\\\"success\\\">Guardar</button>\\n  </div>\\n</form>\"","module.exports = \".user-create-dialog {\\n  font-family: 'Raleway'; }\\n  .user-create-dialog h3 {\\n    color: rgba(48, 48, 48, 0.690196);\\n    margin-top: 0; }\\n  .user-create-dialog h3.social {\\n    margin-bottom: 0; }\\n  .user-create-dialog .basic-info-container {\\n    width: 100%;\\n    margin-bottom: 20px; }\\n  .user-create-dialog .basic-info {\\n    padding-left: 20px; }\\n  .user-create-dialog .basic-info .create-password-container {\\n      margin-top: -18px; }\\n  .user-create-dialog .basic-info .send-email-container {\\n      width: 100%; }\\n  .user-create-dialog .basic-info .permits-container {\\n      width: 50%;\\n      margin-top: 25px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService }  from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-users-create',\n  templateUrl: './users-create.component.html',\n  styleUrls: ['./users-create.component.scss']\n})\nexport class UsersCreateComponent implements OnInit {\n\n  //\n  // Mode: create || edit\n  //\n\n  mode: string = 'create';\n\n  //\n  // Permits\n  //\n\n  permits: string[] = ['', 'admin'];\n\n  //\n  // Main user object\n  //\n\n  userForm = this.fb.group({\n    fullname: ['', [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required]],\n    send_email: [false],\n    roles: ['']\n  });\n\n  //\n  // Must show password?\n  //\n\n  isPasswordHidden: boolean = true;\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private user: UserService,\n              private dialog: MatDialogRef<UsersCreateComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n\n  ngOnInit() {\n\n    //\n    // Loading proper mode: 'create' || 'edit'\n    //\n\n    if ( this.data && this.data.user ) {\n      this.userForm.addControl('_id', this.fb.control(''));\n      this.userForm.reset(this.data.user);\n      this.userForm.get('roles').setValue(this.data.user.roles[0]);\n      this.mode = 'edit';\n    }\n    else\n      this.mode = 'create';\n\n  }\n\n\n  /**\n   * togglePassword\n   * Show or hide the password within the input\n   * \n   */\n\n  togglePassword (): void {\n    this.isPasswordHidden = !this.isPasswordHidden;\n  }\n\n\n  /**\n   * generatePassword\n   * Creates a new random password and fill the\n   * password input automatically\n   * \n   */\n\n  generatePassword (): void {\n    const password = this._randomString(12);\n    this.userForm.get('password').setValue(password);\n  }\n\n\n  /**\n   * saveUser\n   * Saves the new author to database.\n   * \n   */\n\n  saveUser (): void {\n\n    // Validation\n    if ( this.userForm.invalid ) return;\n  \n    // Validation OK\n    if ( this.mode === 'create') {\n\n      //\n      // Creating\n      //\n\n      let user = this.userForm.value;\n      user.roles = [this.userForm.value.roles];\n\n      this\n        .user\n        .create(user)\n        .subscribe(\n          (user: User) => {\n          this.toastr.success('Autor creado correctamente', 'Autor');\n          this.dialog.close(user);\n          },\n          (error: any) => {\n            this.toastr.error('Ha habido un error inesperado. Consulta con un administrador.', 'Error!');\n          });\n    }\n    else {\n\n      //\n      // Editing\n      //\n\n      this\n        .user\n        .update(this.userForm.value)\n        .subscribe(\n          (user: User) => {\n            this.toastr.success('Autor actualizado correctamente', 'Autor');\n            this.dialog.close(user);\n          },\n          (error: any) => {\n            this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n          });\n\n    }\n\n  }\n\n\n  /**************************************\n   *                                    *\n   *           PRIVATE METHODS          *\n   *                                    *\n   * ************************************/\n\n  /**\n   * _randomString\n   * Generates a new random string according\n   * to the length passed by param\n   * \n   * @param length {number} - Random string length\n   */\n\n  private _randomString (length: number) {\n\n    var result = '';\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    for (var i = length; i > 0; --i)\n      result += chars[Math.floor(Math.random() * chars.length)];\n\n    return result;\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Modificar usuario</h1>\\n<div mat-dialog-content class=\\\"user-edit-dialog\\\">\\n\\n  <mat-card>\\n    <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"saveUser()\\\">\\n      <mat-card-header>\\n        <mat-card-title>Información básica</mat-card-title>\\n        <mat-card-subtitle>Modifica los datos básicos del usuario</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n\\n        <!-- NAME -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Nombre</mat-label>\\n          <input matInput #name name=\\\"fullname\\\" formControlName=\\\"fullname\\\" maxlength=\\\"120\\\" placeholder=\\\"Nombre completo\\\">\\n          <mat-error *ngIf=\\\"userForm.get('fullname').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /NAME -->\\n          \\n        <!-- EMAIL -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput #email name=\\\"email\\\" formControlName=\\\"email\\\" maxlength=\\\"120\\\" placeholder=\\\"Correo electrónico\\\">\\n          <mat-error *ngIf=\\\"userForm.get('email').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n          <mat-error *ngIf=\\\"!userForm.get('email').hasError('required') && userForm.get('email').hasError('email')\\\">\\n            El email no es una dirección válida\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /EMAIL -->\\n\\n        <mat-form-field class=\\\"permits-container\\\">\\n          <mat-label>Permisos</mat-label>\\n          <mat-select formControlName=\\\"roles\\\">\\n            <mat-option *ngFor=\\\"let permit of permits\\\" [value]=\\\"permit\\\">\\n              {{ permit }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </mat-card-content>\\n      <mat-card-actions mat-dialog-actions align=\\\"end\\\">\\n        <button type=\\\"submit\\\" mat-button cdkFocusInitial color=\\\"success\\\">GUARDAR</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card>\\n\\n  <mat-card>\\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"savePassword()\\\">\\n      <mat-card-header>\\n        <mat-card-title>Contraseña</mat-card-title>\\n        <mat-card-subtitle>Sustituye la contraseña actual</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <!-- PASSWORD -->\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n          <div fxFlex=\\\"70\\\">\\n            <mat-form-field appearance=\\\"outline\\\">\\n              <mat-label> Contraseña</mat-label>\\n              <input type=\\\"{{ isPasswordHidden ? 'password' : 'text' }}\\\" matInput #password name=\\\"password\\\" formControlName=\\\"password\\\" maxlength=\\\"30\\\" placeholder=\\\"Contraseña\\\">\\n              <button type=\\\"button\\\" mat-button  matSuffix mat-icon-button aria-label=\\\"Ver contraseña\\\" (click)=\\\"togglePassword();\\\">\\n                <mat-icon>{{ isPasswordHidden ? 'visibility_off' : 'visibility' }}</mat-icon>\\n              </button>\\n              <mat-error *ngIf=\\\"passwordForm.get('password').hasError('required')\\\">\\n                Este campo es obligatorio\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div class=\\\"create-password-container\\\" fxFlx=\\\"30\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"info\\\" (click)=\\\"generatePassword()\\\">Generar contraseña</button>\\n          </div>\\n        </div>\\n        <!-- /PASSWORD -->\\n\\n        <div class=\\\"send-email-container\\\" style=\\\"width: 100%;\\\">\\n          <mat-checkbox formControlName=\\\"send_email\\\">Enviar acceso y contraseña por correo</mat-checkbox>\\n        </div>\\n      </mat-card-content>\\n      <mat-card-actions mat-dialog-actions align=\\\"end\\\">\\n        <button type=\\\"submit\\\" mat-button cdkFocusInitial color=\\\"success\\\">GUARDAR</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card>\\n\\n</div>\\n<div mat-dialog-actions align=\\\"end\\\">\\n  <button type=\\\"button\\\" mat-button mat-dialog-close color=\\\"warn\\\">CANCELAR</button>\\n</div>\"","module.exports = \".user-edit-dialog {\\n  font-family: 'Raleway'; }\\n  .user-edit-dialog h3 {\\n    color: rgba(48, 48, 48, 0.690196);\\n    margin-top: 0; }\\n  .user-edit-dialog mat-card {\\n    margin-bottom: 25px; }\\n  .user-edit-dialog mat-card mat-card-title {\\n      font-size: 20px;\\n      font-weight: 500;\\n      color: rgba(0, 0, 0, 0.72); }\\n  .user-edit-dialog mat-card .mat-card-actions {\\n      margin-bottom: 0;\\n      padding-bottom: 0; }\\n  .user-edit-dialog .create-password-container {\\n    margin-top: -18px; }\\n  .user-edit-dialog .send-email-container {\\n    width: 100%; }\\n  .user-edit-dialog .permits-container {\\n    width: 50%;\\n    margin-top: 25px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { UserService }  from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-users-edit',\n  templateUrl: './users-edit.component.html',\n  styleUrls: ['./users-edit.component.scss']\n})\nexport class UsersEditComponent implements OnInit {\n\n  //\n  // Permits\n  //\n\n  permits: string[] = ['', 'admin'];\n\n  //\n  // Main user object\n  //\n\n  userForm = this.fb.group({\n    _id: [''],\n    fullname: ['', [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n    roles: ['']\n  });\n\n  //\n  // Main password object\n  //\n\n  passwordForm = this.fb.group({\n    password: ['', [Validators.required]],\n    send_email: [false]\n  });\n\n  //\n  // Must show password?\n  //\n\n  isPasswordHidden: boolean = true;\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private user: UserService,\n              private dialog: MatDialogRef<UsersEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n\n  ngOnInit() {\n\n    if ( this.data && this.data.user ) {\n      this.userForm.addControl('_id', this.fb.control(''));\n      this.userForm.reset(this.data.user);\n      this.userForm.get('roles').setValue(this.data.user.roles[0]);\n    }\n    else\n      this.dialog.close();\n\n  }\n\n\n  /**\n   * togglePassword\n   * Show or hide the password within the input\n   * \n   */\n\n  togglePassword (): void {\n    this.isPasswordHidden = !this.isPasswordHidden;\n  }\n\n\n  /**\n   * generatePassword\n   * Creates a new random password and fill the\n   * password input automatically\n   * \n   */\n\n  generatePassword (): void {\n    const password = this._randomString(12);\n    this.passwordForm.get('password').setValue(password);\n  }\n\n\n  /**\n   * saveUser\n   * Saves the new author to database.\n   * \n   */\n\n  saveUser (): void {\n\n    // Validation\n    if ( this.userForm.invalid ) return;\n    \n    //\n    // Validation OK\n    //\n\n    let user = this.userForm.value;\n    user.roles = [this.userForm.value.roles];\n\n    this\n      .user\n      .update(user)\n      .subscribe(\n        (user: User) => {\n          this.toastr.success('Autor actualizado correctamente', 'Autor');\n          this.dialog.close(user);\n        },\n        (error: any) => {\n          this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n        });\n\n  }\n\n\n  /**\n   * saveUser\n   * Saves the new author to database.\n   * \n   */\n\n  savePassword (): void {\n\n    // Validation Error\n    if ( this.passwordForm.invalid ) return;\n  \n    //\n    // Validation OK\n    //\n\n    this\n      .user\n      .updatePassword(this.userForm.value._id, this.passwordForm.value)\n      .subscribe(\n        () => {\n          this.toastr.success('Contraseña actualizada correctamente', 'Usuario');\n          this.dialog.close();\n        },\n        (error: any) => {\n          this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n        });\n\n  }\n\n\n  /**************************************\n   *                                    *\n   *           PRIVATE METHODS          *\n   *                                    *\n   * ************************************/\n\n  /**\n   * _randomString\n   * Generates a new random string according\n   * to the length passed by param\n   * \n   * @param length {number} - Random string length\n   */\n\n  private _randomString (length: number) {\n\n    var result = '';\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n    for (var i = length; i > 0; --i)\n      result += chars[Math.floor(Math.random() * chars.length)];\n\n    return result;\n  }\n}\n","module.exports = \"<div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <div fxFlex=\\\"90\\\">\\n    <mat-toolbar color=\\\"accent\\\">\\n      <mat-toolbar-row>\\n        <div class=\\\"main-icon\\\"><mat-icon>personal</mat-icon></div>\\n        <div><span>Usuarios</span></div>\\n        <span class=\\\"spacer\\\"></span>\\n        <button (click)=\\\"toggleSearchBar();\\\" mat-icon-button matTooltip=\\\"Buscar\\\">\\n          <mat-icon>search</mat-icon>\\n        </button>\\n        <button (click)=\\\"openCreateUserDialog()\\\" mat-icon-button matTooltip=\\\"Crear usuario\\\">\\n          <mat-icon>add</mat-icon>\\n        </button>\\n        <button routerLink=\\\"/admin\\\" mat-icon-button matTooltip=\\\"Volver al Dashboard\\\">\\n          <mat-icon>chevron_left</mat-icon>\\n        </button>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n  </div>\\n\\n</div>\\n<div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n  <div fxFlex=\\\"95\\\">\\n    <mat-tab-group mat-align-tabs=\\\"center\\\" color=\\\"accent\\\">\\n      <mat-tab>\\n        <ng-template mat-tab-label>Todos</ng-template>\\n\\n        <!-- TABLE -- All articles -->\\n        <div class=\\\"table mat-elevation-z8\\\">\\n\\n          <!-- PROGRESS BAR  -->\\n          <div class=\\\"progress-bar-container\\\" class=\\\"progress-bar-container\\\">\\n            <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n          </div>\\n\\n          <!-- SEARCH BAR -->\\n          <div *ngIf=\\\"searchBar\\\" class=\\\"search-container\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"searchValue\\\" (ngModelChange)=\\\"didFilterUsers($event);\\\">\\n              <button mat-button *ngIf=\\\"searchValue\\\" matSuffix mat-icon-button aria-label=\\\"Borrar\\\" (click)=\\\"searchValue='';didFilterUsers($event)\\\">\\n                <mat-icon>close</mat-icon>\\n              </button>\\n            </mat-form-field>\\n          </div>\\n\\n          <!-- NO ITEMS FOR SHOWING -->\\n          <div *ngIf=\\\"paginationConfig.totalItems === 0 && !isLoading\\\" class=\\\"no-results-container\\\">\\n            <h3>No hay usuarios para mostrar</h3>\\n          </div>\\n\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"didSortUsers($event)\\\" *ngIf=\\\"paginationConfig.totalItems > 0\\\">\\n    \\n            <!-- Fullname Column -->\\n            <ng-container matColumnDef=\\\"fullname\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> <strong>{{ user.fullname }}</strong> </td>\\n            </ng-container>\\n    \\n            <!-- Email Column -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.email }} </td>\\n            </ng-container>\\n\\n            <!-- Permits At Column -->\\n            <ng-container matColumnDef=\\\"permits\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Permisos </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.roles[0] ? user.roles[0] : '-' }} </td>\\n            </ng-container>\\n    \\n            <!-- Created At Column -->\\n            <ng-container matColumnDef=\\\"createdAt\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Creado </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\"> {{ user.createdAt | date:'longDate' }} </td>\\n            </ng-container>\\n\\n            <!-- Actions At Column -->\\n            <ng-container matColumnDef=\\\"actions\\\">\\n              <th mat-header-cell *matHeaderCellDef> </th>\\n              <td mat-cell *matCellDef=\\\"let user\\\" class=\\\"text-right\\\">\\n                <button mat-icon-button matTooltip=\\\"Editar usuario\\\" color=\\\"info\\\" (click)=\\\"openEditUserDialog(user)\\\">\\n                  <mat-icon aria-label=\\\"Editar usuario\\\">create</mat-icon>\\n                </button>\\n                <button *ngIf=\\\"user._id !== myUser._id\\\" [swal]=\\\"userDeletionAlert\\\" mat-icon-button matTooltip=\\\"Borrar usuario\\\" color=\\\"info\\\" (confirm)=\\\"deleteUser(user)\\\">\\n                  <mat-icon aria-label=\\\"Editar usuario\\\">delete</mat-icon>\\n                </button>\\n              </td>\\n            </ng-container>\\n\\n            <!-- Footer -->\\n            <ng-container matColumnDef=\\\"pagination\\\">\\n              <td mat-footer-cell *matFooterCellDef colspan=\\\"5\\\">\\n                <div class=\\\"pagination-container\\\">\\n                  <ul>\\n                    <li *ngFor=\\\"let user of users | paginate: paginationConfig\\\">pene</li>\\n                  </ul>\\n                  <pagination-controls [id]=\\\"paginationConfig.id\\\"\\n                  (pageChange)=\\\"didPageChange($event)\\\"\\n                  maxSize=\\\"7\\\"\\n                  directionLinks=\\\"true\\\"\\n                  autoHide=\\\"false\\\"\\n                  responsive=\\\"true\\\"\\n                  previousLabel=\\\"Anterior\\\"\\n                  nextLabel=\\\"Siguiente\\\"\\n                  screenReaderPaginationLabel=\\\"Paginación\\\"\\n                  screenReaderPageLabel=\\\"página\\\"\\n                  screenReaderCurrentLabel=\\\"Estás en la página\\\">\\n                  </pagination-controls>\\n                </div>\\n              </td>\\n            </ng-container>\\n    \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n            <tr mat-footer-row *matFooterRowDef=\\\"['pagination']\\\"></tr>\\n          </table>\\n    \\n        </div>\\n        <!-- /TABLE - All articles -->\\n\\n      </mat-tab>\\n\\n    </mat-tab-group>\\n  </div>\\n\\n</div>\"","module.exports = \".table {\\n  background-color: #fff;\\n  margin-top: 20px;\\n  width: 98%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-bottom: 30px; }\\n  .table table {\\n    width: 100%; }\\n  .table table .pagination-container {\\n      text-align: right; }\\n  .table .no-results-container {\\n    text-align: center;\\n    padding-top: 50px;\\n    padding-bottom: 50px; }\\n  .table .progress-bar-container {\\n    height: 3px; }\\n  .table .progress-bar-container mat-progress-bar {\\n      height: 3px; }\\n  .table .search-container {\\n    padding: 15px 22px; }\\n  .table .search-container mat-form-field {\\n      width: 100%; }\\n\"","import { Component, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged} from 'rxjs/operators';\n\nimport { ToastrService } from 'ngx-toastr';\n\nimport { AuthService } from '../../../auth/auth.service';\nimport { UsersCreateComponent } from '../users-create/users-create.component';\nimport { UsersEditComponent } from '../users-edit/users-edit.component';\nimport { UserService } from '../user.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent implements OnInit {\n\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() searchValue: String;\n\n  myUser: User;\n  users: User[] = [];\n\n  paginationConfig: any = {\n    id: 'users_pagination',\n    itemsPerPage: 5,\n    currentPage: 1,\n    totalItems: 0\n  };\n\n  searchBar: boolean = false;\n  searchBarInput : Subject<string> = new Subject();\n  sortValue: any;\n  isLoading: boolean = true;\n  displayedColumns: string[] = ['fullname', 'email', 'permits', 'createdAt', 'actions'];\n  dataSource = new MatTableDataSource<User>(this.users);\n\n\n  //\n  // Alerts\n  //\n\n  userDeletionAlert = {\n    title: '¿Estás seguro?',\n    text: 'El usuario será borrado y no estará disponible',\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Borrar',\n    cancelButtonText: 'Cancelar'\n  };\n\n\n  //\n  // Dialogs\n  //\n\n  createUserDialog: any = null;\n  editUserDialog: any = null;\n\n\n  constructor(private user: UserService,\n              private auth: AuthService,\n              private toastr: ToastrService,\n              private dialog: MatDialog) { }\n\n\n  ngOnInit() {\n\n    this.dataSource.sort = this.sort;\n\n    //\n    // Loading users first time\n    //\n\n    this.loadUsers();\n\n    //\n    // Getting user info\n    //\n\n    this.auth.me().subscribe((data) => {\n      this.myUser = data.user;\n    });\n\n    //\n    // Debounce for searching bar\n    //\n\n    this\n      .searchBarInput\n      .pipe(debounceTime(300), distinctUntilChanged())\n      .subscribe(filterValue => {\n        this.loadUsers();\n      });\n  }\n\n\n  /**\n   * loadUsers\n   * Calls to backend in order to retrieve all the users\n   * according to the query.\n   * \n   */\n\n  loadUsers (filterValue?: String) {\n\n    this.isLoading = true;\n\n    this\n      .user\n      .getAll({\n        page: this.paginationConfig.currentPage,\n        pageSize: this.paginationConfig.itemsPerPage,\n        sort: this.sortValue && this.sortValue.direction ? this.sortValue.direction : '',\n        sortField: this.sortValue && this.sortValue.active ? this.sortValue.active : '',\n        filter: this.searchValue ? this.searchValue : ''\n      }, 'no-loading-bar')\n      .subscribe((users: any) => {\n\n        this.paginationConfig.currentPage = users.page;\n        this.paginationConfig.totalItems = users.totalDocs;\n        this.paginationConfig.itemsPerPage = users.limit;\n        this.dataSource.data = users.docs;\n\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n\n      }, (error) => {\n        console.error(error);\n        this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n      });\n\n  }\n\n\n  /**\n   * didPageChange\n   * Triggered when user changes the current\n   * page via pagination.\n   * \n   */\n\n  didPageChange (page: number) {\n    this.paginationConfig.currentPage = page;\n    this.loadUsers();\n  }\n\n\n  /**\n   * toggleSearchBar\n   * Show or hide the search bar\n   * \n   */\n\n  toggleSearchBar () {\n    this.searchBar = !this.searchBar;\n  }\n\n\n  /**\n   * didFilterUsers\n   * Triggered when user is trying to filter\n   * results by writing in the searching bar.\n   * \n   */\n\n  didFilterUsers (event: any) {\n    this.searchBarInput.next(event);\n  }\n\n\n  /**\n   * didSortUsers\n   * Triggered when user is trying to sort\n   * a column in the users table.\n   * \n   */\n\n  didSortUsers (event: any) {\n    this.sortValue = event;\n    this.loadUsers()\n  }\n\n\n  /**\n   * deleteUser\n   * Set up as deleted the given user\n   * \n   * @param user - User that is going to be deleted \n   */\n\n  deleteUser (user: User) {\n    \n    if ( !user ) return;\n\n    this\n      .user\n      .remove(user._id)\n      .subscribe(() => {\n        this.loadUsers();\n        this.toastr.success('El usuario ha sido borrado correctamente', 'Usuario');\n      }, (error) => {\n        console.error(error);\n        this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n      });\n\n  }\n\n\n  /**\n   * openCreateUserDialog\n   * Open the user creation dialog\n   * \n   */\n\n  openCreateUserDialog () {\n\n    this.createUserDialog = this.dialog.open(UsersCreateComponent, {\n      width: '700px',\n      data: { dialog: this.createUserDialog }\n    });\n\n    this.createUserDialog.afterClosed().subscribe((user: User) => {\n      if ( user )\n        this.loadUsers();\n    });\n  }\n\n\n  /**\n   * openEditUserDialog\n   * Open the user edition dialog\n   * \n   */\n\n  openEditUserDialog (user: User) {\n\n    if ( !user ) return;\n\n    this.editUserDialog = this.dialog.open(UsersEditComponent, {\n      width: '700px',\n      data: {\n        user: user,\n        dialog: this.editUserDialog\n      }\n    });\n\n    this.editUserDialog.afterClosed().subscribe((user: User) => {\n      if ( user )\n        this.loadUsers();\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { OnlyAdminUsersGuard } from '../admin-user-guard';\nimport { UsersListComponent } from './users-list/users-list.component';\n\nconst routes: Routes = [{\n  path: '',\n  canActivate: [OnlyAdminUsersGuard],\n  children: [\n    { path: '', component: UsersListComponent, pathMatch: 'full' }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class UsersRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { UsersRoutingModule } from './users-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { UserService } from './user.service';\nimport { UsersCreateComponent } from './users-create/users-create.component';\nimport { UsersEditComponent } from './users-edit/users-edit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    SweetAlert2Module.forRoot({\n      buttonsStyling: false,\n      confirmButtonClass: 'mat-flat-button mat-info swal2-button-margin',\n      cancelButtonClass: 'mat-flat-button mat-warn swal2-button-margin'\n    }),\n    NgxPaginationModule,\n    UsersRoutingModule\n  ],\n  declarations: [\n    UsersListComponent,\n    UsersCreateComponent,\n    UsersEditComponent\n  ],\n  providers: [UserService],\n  entryComponents: [\n    UsersCreateComponent,\n    UsersEditComponent\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":""}