{"version":3,"sources":["webpack:///./src/app/admin/subjects/subject.service.ts","webpack:///./src/app/admin/subjects/subjects-edit/subjects-edit.component.html","webpack:///./src/app/admin/subjects/subjects-edit/subjects-edit.component.scss","webpack:///./src/app/admin/subjects/subjects-edit/subjects-edit.component.ts","webpack:///./src/app/admin/subjects/subjects-list/subjects-list.component.html","webpack:///./src/app/admin/subjects/subjects-list/subjects-list.component.scss","webpack:///./src/app/admin/subjects/subjects-list/subjects-list.component.ts","webpack:///./src/app/admin/subjects/subjects-routing.module.ts","webpack:///./src/app/admin/subjects/subjects.module.ts"],"names":[],"mappings":"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","file":"app-admin-subjects-subjects-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Subject } from './subject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * getAll\n   * Retrieves subjects from backend. Different kind of\n   * params are allowed.\n   *\n   * @param params - Query\n   * @param loading - Must show main loading bar?\n   */\n\n  getAll(params?: any, loading?: string): Observable<string | any> {\n\n    const url = '/api/subject/all';\n\n    return this.http\n      .get<any>(url, {\n        params: params,\n        headers: loading === 'no-loading-bar' ? new HttpHeaders({ ignoreLoadingBar: '' }) : {}\n      });\n  }\n\n    /**\n   * update\n   * Updates the given subject.\n   *\n   * @param user - The given user to update\n   */\n\n  update(subject: Subject): Observable<any> {\n\n    const url = '/api/subject/' + subject._id;\n\n    return this.http\n      .put<any>(url, subject, { responseType: 'text' as 'json' });\n\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>Modificar asignatura</h1>\\n<div mat-dialog-content class=\\\"user-edit-dialog\\\">\\n\\n  <mat-card>\\n    <form [formGroup]=\\\"subjectForm\\\" (ngSubmit)=\\\"saveSubject()\\\">\\n      <mat-card-header>\\n        <mat-card-title>Información básica</mat-card-title>\\n        <mat-card-subtitle>Modifica los datos básicos de la asignatura </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n\\n        <!-- NOMBRE -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Nombre</mat-label>\\n          <input matInput #nombre name=\\\"nombre\\\" formControlName=\\\"nombre\\\" maxlength=\\\"120\\\" placeholder=\\\"Nombre\\\">\\n          <mat-error *ngIf=\\\"subjectForm.get('nombre').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /NOMBRE -->\\n          \\n        <!-- TITULACIÓN -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Titulación</mat-label>\\n          <input matInput #titulacion name=\\\"titulacion\\\" formControlName=\\\"titulacion\\\" maxlength=\\\"120\\\" placeholder=\\\"Titulación\\\">\\n          <mat-error *ngIf=\\\"subjectForm.get('titulacion').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /TITULACIÓN -->\\n\\n        <mat-form-field class=\\\"permits-container\\\">\\n          <mat-label>Curso</mat-label>\\n          <mat-select formControlName=\\\"curso\\\">\\n            <mat-option *ngFor=\\\"let curso of cursos\\\" [value]=\\\"curso\\\">\\n              {{ curso }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </mat-card-content>\\n      <mat-card-actions mat-dialog-actions align=\\\"end\\\">\\n        <button type=\\\"submit\\\" mat-button cdkFocusInitial color=\\\"success\\\">GUARDAR</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card>\\n\\n  <mat-card>\\n    <form [formGroup]=\\\"subjectForm\\\" (ngSubmit)=\\\"saveSubject()\\\">\\n      <mat-card-header>\\n        <mat-card-title> Ficheros y Software</mat-card-title>\\n        <mat-card-subtitle> Modifica los ficheros y el software necesario de la asignatura </mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content>\\n\\n        <!-- NOMBRE -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Nombre</mat-label>\\n          <input matInput #nombre name=\\\"nombre\\\" formControlName=\\\"nombre\\\" maxlength=\\\"120\\\" placeholder=\\\"Nombre\\\">\\n          <mat-error *ngIf=\\\"subjectForm.get('nombre').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /NOMBRE -->\\n          \\n        <!-- TITULACIÓN -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Titulación</mat-label>\\n          <input matInput #titulacion name=\\\"titulacion\\\" formControlName=\\\"titulacion\\\" maxlength=\\\"120\\\" placeholder=\\\"Titulación\\\">\\n          <mat-error *ngIf=\\\"subjectForm.get('titulacion').hasError('required')\\\">\\n            Este campo es obligatorio\\n          </mat-error>\\n        </mat-form-field>\\n        <!-- /TITULACIÓN -->\\n\\n        <mat-form-field class=\\\"permits-container\\\">\\n          <mat-label>Curso</mat-label>\\n          <mat-select formControlName=\\\"curso\\\">\\n            <mat-option *ngFor=\\\"let curso of cursos\\\" [value]=\\\"curso\\\">\\n              {{ curso }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </mat-card-content>\\n      <mat-card-actions mat-dialog-actions align=\\\"end\\\">\\n        <button type=\\\"submit\\\" mat-button cdkFocusInitial color=\\\"success\\\">GUARDAR</button>\\n      </mat-card-actions>\\n    </form>\\n  </mat-card>\\n\\n</div>\\n<div mat-dialog-actions align=\\\"end\\\">\\n  <button type=\\\"button\\\" mat-button mat-dialog-close color=\\\"warn\\\">CANCELAR</button>\\n</div>\"","module.exports = \".user-edit-dialog {\\n  font-family: 'Work Sans', sans-serif; }\\n  .user-edit-dialog h3 {\\n    color: rgba(48, 48, 48, 0.690196);\\n    margin-top: 0; }\\n  .user-edit-dialog mat-card {\\n    margin-bottom: 25px; }\\n  .user-edit-dialog mat-card mat-card-title {\\n      font-size: 20px;\\n      font-weight: 500;\\n      color: rgba(0, 0, 0, 0.72); }\\n  .user-edit-dialog mat-card .mat-card-actions {\\n      margin-bottom: 0;\\n      padding-bottom: 0; }\\n  .user-edit-dialog .create-password-container {\\n    margin-top: -18px; }\\n  .user-edit-dialog .send-email-container {\\n    width: 100%; }\\n  .user-edit-dialog .permits-container {\\n    width: 50%;\\n    margin-top: 25px; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\n\nimport { SubjectService } from '../subject.service';\nimport { Subject } from '../subject';\n\n@Component({\n  selector: 'app-subjects-edit',\n  templateUrl: './subjects-edit.component.html',\n  styleUrls: ['./subjects-edit.component.scss']\n})\n\nexport class SubjectsEditComponent implements OnInit {\n\n  //\n  // Permits\n  //\n\n  cursos: string[] = ['Primero', 'Segundo', 'Tercero', 'Cuarto'];\n\n  //\n  // Main user object\n  //\n\n  subjectForm = this.fb.group({\n    _id: [''],\n    fullname: ['', [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n    roles: ['']\n  });\n\n  //\n  // Main password object\n  //\n\n  /* passwordForm = this.fb.group({\n    password: ['', [Validators.required]],\n    send_email: [false]\n  }); */\n\n  //\n  // Must show password?\n  //\n\n  /*isPasswordHidden: boolean = true; */\n\n  constructor(private fb: FormBuilder,\n              private toastr: ToastrService,\n              private subject: SubjectService,\n              private dialog: MatDialogRef<SubjectsEditComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n\n  ngOnInit() {\n\n    if ( this.data && this.data.subject ) {\n      this.subjectForm.addControl('_id', this.fb.control(''));\n      this.subjectForm.reset(this.data.user);\n      this.subjectForm.get('roles').setValue(this.data.user.roles[0]);\n    } else {\n      this.dialog.close();\n    }\n  }\n\n  /**\n   * saveSubject\n   * Saves the new author to database.\n   *\n   */\n\n  saveSubject (): void {\n\n    // Validation\n    if ( this.subjectForm.invalid ) { return; }\n\n    //\n    // Validation OK\n    //\n\n    let subject = this.subjectForm.value;\n\n    this\n      .subject\n      .update(subject)\n      .subscribe(\n        (subject: Subject) => {\n          this.toastr.success('Asignatura actualizada correctamente', 'Confirmación');\n          this.dialog.close(subject);\n        },\n        (error: any) => {\n          this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n        });\n\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <!-- <h2> Asignaturas </h2>-->\\n    <div class=\\\"main-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div fxFlex=\\\"100\\\">\\n          <mat-toolbar color=\\\"accent\\\">\\n              <mat-toolbar-row>\\n                <div class=\\\"main-icon\\\"><mat-icon>class</mat-icon></div>\\n                <div><span class=\\\"title\\\">Asignaturas</span></div>\\n                <span class=\\\"spacer\\\"></span>\\n                <button (click)=\\\"toggleSearchBar();\\\" mat-icon-button matTooltip=\\\"Buscar\\\">\\n                  <mat-icon>search</mat-icon>\\n                </button>\\n                <button routerLink=\\\"/admin\\\" mat-icon-button matTooltip=\\\"Volver al Inicio\\\">\\n                  <mat-icon>chevron_left</mat-icon>\\n                </button>\\n              </mat-toolbar-row>\\n          </mat-toolbar>\\n          \\n          <!-- SEARCH BAR -->\\n            <div *ngIf=\\\"searchBar\\\" class=\\\"search-container\\\">\\n              <mat-form-field>\\n                <input matInput placeholder=\\\"Buscar\\\" [(ngModel)]=\\\"searchValue\\\" (ngModelChange)=\\\"didFilterSubjects($event);\\\">\\n                <button mat-button *ngIf=\\\"searchValue\\\" matSuffix mat-icon-button aria-label=\\\"Borrar\\\" (click)=\\\"searchValue='';didFilterSubjects($event)\\\">\\n                  <mat-icon>close</mat-icon>\\n                </button>\\n              </mat-form-field>\\n            </div>\\n\\n            <!-- NO ITEMS FOR SHOWING -->\\n            <div *ngIf=\\\"paginationConfig.totalItems === 0 && !isLoading\\\" class=\\\"no-results-container\\\">\\n              <h3>No hay asignaturas para mostrar</h3>\\n            </div>\\n  \\n            <table class=\\\"subjects-table\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"didSortSubjects($event)\\\" *ngIf=\\\"paginationConfig.totalItems > 0\\\">\\n      \\n              <!-- Codigo Column -->\\n              <ng-container matColumnDef=\\\"codigo\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Código </th>\\n                <td class=\\\"click\\\" mat-cell *matCellDef=\\\"let subject\\\"> <strong>{{ subject.codigo }}</strong> </td>\\n              </ng-container>\\n      \\n              <!-- Nombre Column -->\\n              <ng-container matColumnDef=\\\"nombre\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\\n                <td class=\\\"click\\\" mat-cell *matCellDef=\\\"let subject\\\"> <strong>{{ subject.nombre }} </strong></td>\\n              </ng-container>\\n  \\n              <!--  Duracion Column -->\\n              <ng-container matColumnDef=\\\"duracion\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Duración </th>\\n                <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.duracion}} </td>\\n              </ng-container>\\n      \\n              <!-- Curso At Column -->\\n              <ng-container matColumnDef=\\\"curso\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Curso </th>\\n                <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.curso }} </td>\\n              </ng-container>\\n              <!--  Updated Column -->\\n              <ng-container matColumnDef=\\\"updated\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Actualizado </th>\\n                <td mat-cell *matCellDef=\\\"let subject\\\"> {{ subject.updated | date:'longDate' }} </td>\\n              </ng-container>\\n  \\n              <!-- Actions At Column -->\\n              <ng-container matColumnDef=\\\"actions\\\">\\n                <th mat-header-cell *matHeaderCellDef> </th>\\n                <td mat-cell *matCellDef=\\\"let subject\\\" class=\\\"text-right\\\">\\n                  <button mat-icon-button matTooltip=\\\"Editar asignatura\\\" color=\\\"info\\\" (click)=\\\"openEditSubjectDialog(subject)\\\">\\n                    <mat-icon aria-label=\\\"Editar usuario\\\">create</mat-icon>\\n                  </button>\\n                </td>\\n              </ng-container>\\n  \\n              <!-- Footer -->\\n              <ng-container matColumnDef=\\\"pagination\\\" class=\\\"pagination\\\">\\n                <td mat-footer-cell *matFooterCellDef colspan=\\\"5\\\">\\n                  <div class=\\\"pagination-container\\\">\\n                    <ul>\\n                      <li *ngFor=\\\"let subject of subjects | paginate: paginationConfig\\\">Prueba</li>\\n                    </ul>\\n                    <pagination-controls [id]=\\\"paginationConfig.id\\\"\\n                    (pageChange)=\\\"didPageChange($event)\\\"\\n                    maxSize=\\\"7\\\"\\n                    directionLinks=\\\"true\\\"\\n                    autoHide=\\\"false\\\"\\n                    responsive=\\\"true\\\"\\n                    previousLabel=\\\"Anterior\\\"\\n                    nextLabel=\\\"Siguiente\\\"\\n                    screenReaderPaginationLabel=\\\"Paginación\\\"\\n                    screenReaderPageLabel=\\\"página\\\"\\n                    screenReaderCurrentLabel=\\\"Estás en la página\\\">\\n                    </pagination-controls>\\n                  </div>\\n                </td>\\n              </ng-container>\\n      \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n              <tr mat-footer-row *matFooterRowDef=\\\"['pagination']\\\"></tr>\\n            </table>\\n          <!-- /TABLE - All subjects -->\\n        <!-- PROGRESS BAR  -->\\n        <div class=\\\"progress-bar-container\\\" class=\\\"progress-bar-container\\\">\\n          <mat-progress-bar *ngIf=\\\"isLoading\\\" mode=\\\"indeterminate\\\" color=\\\"primary\\\"></mat-progress-bar>\\n        </div>\\n      </div>\\n    \\n    </div>\\n</div>\"","module.exports = \"/*-----------------------------------------------\\n                   Variables\\n-----------------------------------------------*/\\nh3 {\\n  font-size: 18px; }\\n.subjects-table {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 50px auto; }\\n.ngx-pagination {\\n  padding: 0px;\\n  text-align: center; }\\n.subjects-table td {\\n  padding: 40px 20px; }\\n.subjects-table th {\\n  padding: 20px 20px;\\n  color: #002E67;\\n  font-weight: bold; }\\n.click {\\n  transition: all .5s; }\\n.click:hover {\\n  color: #ff9a00; }\\n.search-container {\\n  max-width: 1024px;\\n  margin: 20px auto 0px; }\\n.title {\\n  font-weight: 900;\\n  padding-left: 5px; }\\n.main-container {\\n  max-width: 1024px;\\n  width: 100%;\\n  margin: 0px auto;\\n  padding: 20px 0px; }\\n::ng-deep body .dashboard .container {\\n  max-width: 1200px;\\n  width: 90%;\\n  margin: 0px auto;\\n  min-height: calc(100vh - 85px); }\\n::ng-deep .dashboard .sidenav-main-content {\\n  padding-top: 0px !important; }\\ntable {\\n  background-color: transparent; }\\n\"","import { Component, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatSort } from '@angular/material';\nimport { MatDialog } from '@angular/material';\nimport { Subject as SubjectRxjs } from 'rxjs';\nimport { debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../../auth/auth.service';\nimport { SubjectsEditComponent } from '../subjects-edit/subjects-edit.component';\nimport { SubjectService } from '../subject.service';\nimport { Subject } from '../subject';\n\n@Component({\n  selector: 'app-subjects-list',\n  templateUrl: './subjects-list.component.html',\n  styleUrls: ['./subjects-list.component.scss']\n})\nexport class SubjectsListComponent implements OnInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @Output() searchValue: String;\n\n  mySubject: Subject;\n  subjects: Subject[] = [];\n\n  paginationConfig: any = {\n    id: 'users_pagination',\n    itemsPerPage: 5,\n    currentPage: 1,\n    totalItems: 0\n  };\n\n  searchBar = false;\n  searchBarInput: SubjectRxjs<string> = new SubjectRxjs();\n  sortValue: any;\n  isLoading = true;\n  displayedColumns: string[] = ['codigo', 'nombre', 'duracion', 'curso', 'updated', 'actions'];\n  dataSource = new MatTableDataSource<Subject>(this.subjects);\n\n\n  //\n  // Dialogs\n  //\n\n  editSubjectDialog: any = null;\n\n  constructor(\n    private subjectService: SubjectService,\n    private auth: AuthService,\n    private toastr: ToastrService,\n    private dialog: MatDialog,\n  ) { }\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n    this.getAll();\n\n        this\n      .searchBarInput\n      .pipe(debounceTime(300), distinctUntilChanged())\n      .subscribe(filterValue => {\n        this.getAll();\n      });\n  }\n\n  getAll(filterValue?: String) {\n    this.isLoading = true;\n\n    this\n      .subjectService\n      .getAll({\n        page: this.paginationConfig.currentPage,\n        pageSize: this.paginationConfig.itemsPerPage,\n        sort: this.sortValue && this.sortValue.direction ? this.sortValue.direction : '',\n        sortField: this.sortValue && this.sortValue.active ? this.sortValue.active : '',\n        filter: this.searchValue ? this.searchValue : ''\n      }, 'no-loading-bar')\n      .subscribe((subjects: any) => {\n\n        this.paginationConfig.currentPage = subjects.page;\n        this.paginationConfig.totalItems = subjects.totalDocs;\n        this.paginationConfig.itemsPerPage = subjects.limit;\n        this.dataSource.data = subjects.docs;\n\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 1000);\n\n      }, (error) => {\n        console.error(error);\n        this.toastr.error('Ha ocurrido un error inesperado. Consulta con un administrador.', 'Error!');\n      });\n  }\n\n  didPageChange (page: number) {\n    this.paginationConfig.currentPage = page;\n    this.getAll();\n  }\n\n  /**\n   * toggleSearchBar\n   * Show or hide the search bar\n   *\n   */\n  toggleSearchBar () {\n    this.searchBar = !this.searchBar;\n  }\n\n  /**\n   * didFilterSubjects\n   * Triggered when user is trying to filter\n   * results by writing in the searching bar.\n   *\n   */\n\n  didFilterSubjects (event: any) {\n    this.searchBarInput.next(event);\n  }\n\n  didSortSubjects (event: any) {\n    this.sortValue = event;\n    this.getAll();\n  }\n\n  /**\n   * openEditSubjecyDialog\n   * Open the subject edition dialog\n   *\n   */\n\n  openEditSubjectDialog (subject: Subject) {\n\n    if ( !subject ) { return; }\n\n    this.editSubjectDialog = this.dialog.open(SubjectsEditComponent, {\n      width: '700px',\n      data: {\n        subject: subject,\n        dialog: this.editSubjectDialog\n      }\n    });\n\n    this.editSubjectDialog.afterClosed().subscribe((subject: Subject) => {\n      if ( subject ) {\n        this.getAll();\n      }\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OnlyAdminUsersGuard } from '../admin-user-guard';\nimport { SubjectsListComponent } from './subjects-list/subjects-list.component';\n\nconst routes: Routes = [{\n  path: '',\n  canActivate: [OnlyAdminUsersGuard],\n  children: [\n    { path: '', component: SubjectsListComponent, pathMatch: 'full' }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubjectsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\nimport { SubjectsRoutingModule } from './subjects-routing.module';\nimport { SubjectsListComponent } from './subjects-list/subjects-list.component';\nimport { SubjectsEditComponent } from './subjects-edit/subjects-edit.component';\n\nimport { SubjectService } from './subject.service';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SubjectsRoutingModule,\n    SharedModule,\n    SweetAlert2Module.forRoot({\n      buttonsStyling: false,\n      confirmButtonClass: 'mat-flat-button mat-info swal2-button-margin',\n      cancelButtonClass: 'mat-flat-button mat-warn swal2-button-margin'\n    }),\n    NgxPaginationModule,\n  ],\n  declarations: [SubjectsListComponent, SubjectsEditComponent],\n  providers: [SubjectService],\n  entryComponents: [\n    SubjectsEditComponent\n  ]\n})\nexport class SubjectsModule { }\n"],"sourceRoot":""}